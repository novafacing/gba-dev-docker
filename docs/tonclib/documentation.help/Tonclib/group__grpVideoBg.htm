<!DOCTYPE HTML>
<html>
<head>
<title>
libtonc: Tiled Backgrounds - Tonclib Documentation</title>
<script src="../cdn-cgi/apps/head/MjlXTyhGypAwQFkqZX2sOa_9i4o.js"></script><link rel="alternate" href="documentation.pdf" /><link href="page_styles.css.html" rel="stylesheet" type="text/css" />
<link href="../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!--[if lte IE 8]><script src="assets/js/ie/html5shiv.js"></script><![endif]-->
<link rel="stylesheet" href="../assets/css/main.css" />
<link rel="shortcut icon" href="../favicon.ico">
<!--[if lte IE 9]><link rel="stylesheet" href="assets/css/ie9.css" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" href="assets/css/ie8.css" /><![endif]-->
<style>
.collapse > a{
  background: #cdf;
  cursor: pointer;
  display: block;
}
.collapse:focus{
  outline: none;
}
.collapse > div{
  display: none;
}
.collapse:focus div{
  display: block; 
}
</style>
</head>
<body>

<div id="wrapper">
 
<div id="main">
<div class="inner">

<header id="header">
<a href="https://documentation.help/" class="logo"><strong>documentation</strong>.HELP!</a> Tonclib Documentation </header>

<section>
<h1>libtonc: Tiled Backgrounds</h1>
<h4>Tonclib</h4>
<div class="content">
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="d9736d1c2bab0febdb2a89c7-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="d9736d1c2bab0febdb2a89c7-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<div><div class="calibreMain">
<div class="calibreEbookContent">
<div class="calibreEbNavTop">
<a href="group__grpVideoPal.htm" class="calibreAPrev">previous page</a>
<a href="group__grpVideoBmp.htm" class="calibreANext"> next page</a>
</div>

<div class="tabs">
<ul class="calibre1">
<li class="current"><a href="main.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Main Page</span></a></li>
<li class="current"><a href="modules.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Modules</span></a></li>
<li class="current"><a href="classes.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Data Structures</span></a></li>
<li class="current"><a href="files.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Files</span></a></li>
<li class="current"><a href="pages.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Related Pages</span></a></li>
</ul>
</div>
<h1 class="calibre6">Tiled Backgrounds<br class="calibre24" />
<small class="calibre25">
[<a class="el1 pcalibre5 pcalibre6" href="group__grpVideo.htm">Video</a>]</small>
</h1><table border="0" cellpadding="0" cellspacing="0" class="calibre17">
<tr class="calibre18"><td class="calibre19" /></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Defines</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#ge86fe3f21840826bf0272cfebea463ba">CBB_CLEAR</a>(cbb)   memset32(&amp;tile_mem[cbb], 0, CBB_SIZE/4)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g149fad2d117fc826b8caf2b55682f3b2"></a>
#define </td><td class="memitemright"><b class="calibre22">SBB_CLEAR</b>(sbb)   memset32(&amp;se_mem[sbb], 0, SBB_SIZE/4)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0121a2be09e3d8656630269fc59f8cf7"></a>
#define </td><td class="memitemright"><b class="calibre22">SBB_CLEAR_ROW</b>(sbb, row)   memset32(&amp;se_mem[sbb][(row)*32], 0, 32/2)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g2b097ef6836bcc9d5f1c004a8b983e2d"></a>
#define </td><td class="memitemright"><b class="calibre22">__BG_TYPES</b>   ((0x0C7F&lt;&lt;16)|(0x0C40))</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g14d94be9e15340500f8a67b65e55c008"></a>
#define </td><td class="memitemright"><b class="calibre22">BG_IS_AFFINE</b>(n)   ( (__BG_TYPES&gt;&gt;(4*(REG_DISPCNT&amp;7)+(n) ))&amp;1 )</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g18124b9b295ef6ec10bc63a83b17b8c7"></a>
#define </td><td class="memitemright"><b class="calibre22">BG_IS_AVAIL</b>(n)   ( (__BG_TYPES&gt;&gt;(4*(REG_DISPCNT&amp;7)+(n)+16))&amp;1 )</td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Functions</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g2125aa4286830ed213dc582e94734d26"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g2125aa4286830ed213dc582e94734d26">se_fill</a> (SCR_ENTRY *sbb, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill screenblock <em class="calibre27">sbb</em> with <em class="calibre27">se</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0d5f23c61d3ff2f8ad513553338c7263"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g0d5f23c61d3ff2f8ad513553338c7263">se_plot</a> (SCR_ENTRY *sbb, int x, int y, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a screen entry at (<em class="calibre27">x</em>,<em class="calibre27">y</em>) of screenblock <em class="calibre27">sbb</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g9510b038adb0e045c4c980f1472a15cd"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g9510b038adb0e045c4c980f1472a15cd">se_rect</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill a rectangle on <em class="calibre27">sbb</em> with <em class="calibre27">se</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g21d0366fa0f3a0a287e1e193f931200a"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g21d0366fa0f3a0a287e1e193f931200a">se_frame</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a border on <em class="calibre27">sbb</em> with <em class="calibre27">se</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g9a4d24635820ee7459e7efa5911067bb">se_window</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se0)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a framed rectangle. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g6d3e74fb47545e9c1ca61793aa2b9902"></a>
void </td><td class="memitemright"><b class="calibre22">se_hline</b> (SCR_ENTRY *sbb, int x0, int x1, int y, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge898a823a28b8d9d833ebf6a0ecf6ba8"></a>
void </td><td class="memitemright"><b class="calibre22">se_vline</b> (SCR_ENTRY *sbb, int x, int y0, int y1, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g9f93f5138ff3d47d00a044f41bf654c2"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g9f93f5138ff3d47d00a044f41bf654c2">bg_aff_set</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pa, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pb, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pc, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pd)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set the elements of an <em class="calibre27">bg</em> affine matrix. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gfbcf430c4a1845ff048a712f1dd136ab"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gfbcf430c4a1845ff048a712f1dd136ab">bg_aff_identity</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set an bg affine matrix to the identity matrix. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb0a134e7485c7dda4d6ed72d1784247b"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gb0a134e7485c7dda4d6ed72d1784247b">bg_aff_scale</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sx, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sy)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set an bg affine matrix for scaling. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g7bd2527dbe25037d0f35eb56face8010"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">bg_aff_shearx</b> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hx)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0a0bf192e25e13d578cddeaa03c5fdc3"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">bg_aff_sheary</b> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hy)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g4a79fb8a1941001c5de00c5241453a8d">bg_aff_rotate</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, u16 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg matrix to counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gb0d48ace0799a3c64c30ec38be40b764">bg_aff_rotscale</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, int sx, int sy, u16 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg matrix to 2d scaling, then counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g49bdf87a8a29679abd1ffcaf06ff9abc"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g49bdf87a8a29679abd1ffcaf06ff9abc">bg_aff_premul</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *src)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Pre-multiply <em class="calibre27">dst</em> by <em class="calibre27">src:</em> D = S*D. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gba4d91096bf483cc408ed96419232dcd"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gba4d91096bf483cc408ed96419232dcd">bg_aff_postmul</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *src)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Post-multiply <em class="calibre27">dst</em> by <em class="calibre27">src:</em> D= D*S. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g783336f60bac5301fbda41b4ab856a04">bg_aff_rotscale2</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, const AFF_SRC *as)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg matrix to 2d scaling, then counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g883bad93b65ed70e331f91b191f67a92">bg_rotscale_ex</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, const AFF_SRC_EX *asx)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg affine matrix to a rot/scale around an arbitrary point. <br class="calibre21" /></td></tr>
</table>
<hr class="calibre9" /><h2 class="calibre20">Define Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="ge86fe3f21840826bf0272cfebea463ba"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">#define CBB_CLEAR </td>
<td class="calibre19">(</td>
<td class="paramtype">cbb </td>
<td class="paramname"> </td>
<td class="calibre19"> ) </td>
<td width="100%" class="calibre19">   memset32(&amp;tile_mem[cbb], 0, CBB_SIZE/4)</td>
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
</p></div>
</div><p class="calibre7">
<hr class="calibre9" /><h2 class="calibre20">Function Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="g4a79fb8a1941001c5de00c5241453a8d"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bg_aff_rotate </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">bgaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u16 </td>
<td class="paramname"> <em class="calibre27">alpha</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Set bg matrix to counter-clockwise rotation.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bgaff</em> </td><td class="calibre19">Object affine struct to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">alpha</em> </td><td class="calibre19">CCW angle. full-circle is 10000h. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="gb0d48ace0799a3c64c30ec38be40b764"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bg_aff_rotscale </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">bgaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">sx</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">sy</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u16 </td>
<td class="paramname"> <em class="calibre27">alpha</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Set bg matrix to 2d scaling, then counter-clockwise rotation.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bgaff</em> </td><td class="calibre19">Object affine struct to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">sx</em> </td><td class="calibre19">Horizontal scale (zoom). .8 fixed point. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">sy</em> </td><td class="calibre19">Vertical scale (zoom). .8 fixed point. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">alpha</em> </td><td class="calibre19">CCW angle. full-circle is 10000h. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g783336f60bac5301fbda41b4ab856a04"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bg_aff_rotscale2 </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">bgaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">const AFF_SRC * </td>
<td class="paramname"> <em class="calibre27">as</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Set bg matrix to 2d scaling, then counter-clockwise rotation.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bgaff</em> </td><td class="calibre19">Object affine struct to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">as</em> </td><td class="calibre19">Struct with scales and angle. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g883bad93b65ed70e331f91b191f67a92"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bg_rotscale_ex </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">bgaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">const AFF_SRC_EX * </td>
<td class="paramname"> <em class="calibre27">asx</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Set bg affine matrix to a rot/scale around an arbitrary point.
</p><p class="calibre7">
Rotate and scale round an arbitrary point using the <em class="calibre27">asx</em> data. <dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bgaff</em> </td><td class="calibre19">BG affine data to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">asx</em> </td><td class="calibre19">Affine source data: screen and texture origins, scales and angle. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g9a4d24635820ee7459e7efa5911067bb"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void se_window </td>
<td class="calibre19">(</td>
<td class="paramtype">SCR_ENTRY * </td>
<td class="paramname"> <em class="calibre27">sbb</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">SCR_ENTRY </td>
<td class="paramname"> <em class="calibre27">se0</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Create a framed rectangle.
</p><p class="calibre7">
In contrast to <a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g21d0366fa0f3a0a287e1e193f931200a" title="Create a border on sbb with se.">se_frame()</a>, se_frame_ex() uses nine tiles starting at <em class="calibre27">se0</em> for the frame, which indicate the borders and center for the window. <dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Rectangle is nor normalized. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<hr size="1" class="calibre9" /><address class="calibre10"><small class="calibre11">Generated on Mon Aug 25 17:03:57 2008 for libtonc by 
<a href="http://www.doxygen.org/index.html" class="pcalibre5 pcalibre6 calibre8">
<img src="doxygen.png" alt="doxygen" border="0" class="calibre12" /></a> 1.5.3 </small></address>
</p>
</div>
<div class="calibreEbNav">
<a href="group__grpVideoPal.htm" class="calibreAPrev">previous page</a>
<a href="index.html" class="calibreAHome"> start</a>
<a href="group__grpVideoBmp.htm" class="calibreANext"> next page</a>
</div>
</div>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="d9736d1c2bab0febdb2a89c7-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="d9736d1c2bab0febdb2a89c7-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</table>
</div>
</section>

</div>
</div>


<div id="sidebar">
<div class="inner">


<nav id="menu">
<header class="major">
<h2>Menu</h2>
</header>
<ul>
<li><a href="https://documentation.help/">Homepage</a></li> 
</ul>
<div><div class="calibreTocIndex">
<h2> Table of contents</h2>
<div>
<ul>
<li>
<a href="main.htm">Tonclib 1.4 (20080825)</a>
</li>
<li>
<a href="modules.htm">Modules</a>
<ul>
<li>
<a href="group__grpBios.htm">Bios Calls</a>
<ul>
<li>
<a href="group__grpBiosDef.htm">BIOS informalities</a>
</li>
<li>
<a href="group__grpBiosMain.htm">BIOS functions</a>
</li>
<li>
<a href="group__grpBiosEx.htm">More BIOS functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpCore.htm">Core</a>
<ul>
<li>
<a href="group__grpCoreBit.htm">Bit(field) macros</a>
</li>
<li>
<a href="group__grpData.htm">Data routines</a>
</li>
<li>
<a href="group__grpCoreMisc.htm">Miscellaneous routines</a>
</li>
<li>
<a href="group__grpNocash.htm">no$gba debugging</a>
</li>
</ul>
</li>
<li>
<a href="group__grpDma.htm">DMA</a>
</li>
<li>
<a href="group__grpInput.htm">Input</a>
</li>
<li>
<a href="group__grpIrq.htm">Interrupt</a>
</li>
<li>
<a href="group__grpMath.htm">Math</a>
<ul>
<li>
<a href="group__grpMathBase.htm">Base math</a>
</li>
<li>
<a href="group__grpMathFixed.htm">Fixed point math</a>
</li>
<li>
<a href="group__grpMathLut.htm">Look-up tables</a>
</li>
<li>
<a href="group__grpMathPoint.htm">Point functions</a>
</li>
<li>
<a href="group__grpMathVector.htm">Vector functions</a>
</li>
<li>
<a href="group__grpMathRect.htm">Rect functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemmap.htm">Memory Map</a>
<ul>
<li>
<a href="group__grpMemBits.htm">Memory map bit(fields)</a>
<ul>
<li>
<a href="group__grpVideoDCNT.htm">Display Control Flags</a>
</li>
<li>
<a href="group__grpVideoDSTAT.htm">Display Status Flags</a>
</li>
<li>
<a href="group__grpVideoBGCNT.htm">Background Control Flags</a>
</li>
<li>
<a href="group__grpVideoGfx.htm">Graphic effects</a>
</li>
<li>
<a href="group__grpVideoBLD.htm">Blend Flags</a>
</li>
<li>
<a href="group__grpAudioSSW.htm">Tone Generator, Sweep Flags</a>
</li>
<li>
<a href="group__grpAudioSSQR.htm">Tone Generator, Square Flags</a>
</li>
<li>
<a href="group__grpAudioSFREQ.htm">Tone Generator, Frequency Flags</a>
</li>
<li>
<a href="group__grpAudioSDMG.htm">Tone Generator, Control Flags</a>
</li>
<li>
<a href="group__grpAudioSDS.htm">Direct Sound Flags</a>
</li>
<li>
<a href="group__grpAudioSSTAT.htm">Sound Status Flags</a>
</li>
<li>
<a href="group__grpAudioDMA.htm">DMA Control Flags</a>
</li>
<li>
<a href="group__grpTimerTM.htm">Timer Control Flags</a>
</li>
<li>
<a href="group__grpSioCnt.htm">Serial I/O Control</a>
</li>
<li>
<a href="group__grpCommR.htm">Comm control.</a>
</li>
<li>
<a href="group__grpInputKEY.htm">Key Flags</a>
</li>
<li>
<a href="group__grpInputKCNT.htm">Key Control Flags</a>
</li>
<li>
<a href="group__grpIrqIRQ.htm">Interrupt Flags</a>
</li>
<li>
<a href="group__grpMiscWS.htm">Waitstate Control Flags</a>
</li>
<li>
<a href="group__grpVideoSE.htm">Screen-entry Flags</a>
</li>
<li>
<a href="group__grpVideoAttr0.htm">Object Attribute 0 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr1.htm">Object Attribute 1 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr2.htm">Object Attribute 2 Flags</a>
</li>
</ul>
</li>
 <li>
<a href="group__grpMemArray.htm">Memory mapped arrays</a>
</li>
<li>
<a href="group__grpReg.htm">IO Registers</a>
</li>
<li>
<a href="group__grpRegAlt.htm">IO Alternates</a>
</li>
</ul>
</li>
<li>
<a href="group__grpAudio.htm">Sound</a>
</li>
<li>
<a href="group__grpTTE.htm">Tonc Text Engine</a>
<ul>
<li>
<a href="group__grpTTEOps.htm">Operations</a>
</li>
<li>
<a href="group__grpTTEAttr.htm">Attributes</a>
</li>
<li>
<a href="group__grpTTEConio.htm">Console IO</a>
</li>
<li>
<a href="group__grpTTEMap.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTTEChr4c.htm">Character text, column-major</a>
</li>
<li>
<a href="group__grpTTEChr4r.htm">Character text, row-major</a>
</li>
<li>
<a href="group__grpTTEBmp.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTTEObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpText.htm">Old Text</a>
<ul>
<li>
<a href="group__grpTextTile.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTextBm.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTextObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTimer.htm">Timer</a>
</li>
<li>
<a href="group__grpVideo.htm">Video</a>
<ul>
<li>
<a href="group__grpSurface.htm">Surface functions</a>
<ul>
<li>
<a href="group__grpSbmp16.htm">16bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSbmp8.htm">8bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSchr4c.htm">4bpp tiled surfaces, column major</a>
</li>
<li>
<a href="group__grpSchr4r.htm">4bpp tiled surfaces, row major</a>
</li>
</ul>
</li>
<li>
<a href="group__grpVideoPal.htm">Colors</a>
</li>
<li>
<a href="group__grpVideoBg.htm">Tiled Backgrounds</a>
</li>
<li>
<a href="group__grpVideoBmp.htm">Bitmaps</a>
</li>
<li>
<a href="group__grpVideoObj.htm">Objects</a>
</li>
<li>
<a href="group__grpVideoAffine.htm">Affine functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTypes.htm">Types and attributes</a>
<ul>
<li>
<a href="group__grpTypeAttr.htm">Type attributes</a>
</li>
<li>
<a href="group__grpTypePrim.htm">Primary types</a>
</li>
<li>
<a href="group__grpTypeSec.htm">Secondary types</a>
</li>
<li>
<a href="group__grpTypeTert.htm">Tertiary types</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="annotated.htm">Data Structures</a>
<ul>
<li>
<a href="structBG__POINT.htm">BG_POINT</a>
</li>
<li>
<a href="structBgAffineDest.htm">BgAffineDest</a>
</li>
<li>
<a href="structBgAffineSource.htm">BgAffineSource</a>
</li>
<li>
<a href="structBLOCK.htm">BLOCK</a>
</li>
<li>
<a href="structBUP.htm">BUP</a>
</li>
<li>
<a href="structDMA__REC.htm">DMA_REC</a>
</li>
<li>
<a href="structIRQ__REC.htm">IRQ_REC</a>
</li>
<li>
<a href="structIRQ__SENDER.htm">IRQ_SENDER</a>
</li>
<li>
<a href="structMultiBootParam.htm">MultiBootParam</a>
</li>
<li>
<a href="structOBJ__AFFINE.htm">OBJ_AFFINE</a>
</li>
<li>
<a href="structOBJ__ATTR.htm">OBJ_ATTR</a>
</li>
<li>
<a href="structObjAffineDest.htm">ObjAffineDest</a>
</li>
<li>
<a href="structObjAffineSource.htm">ObjAffineSource</a>
</li>
<li>
<a href="structPOINT32.htm">POINT32</a>
</li>
<li>
<a href="structRECT32.htm">RECT32</a>
</li>
<li>
<a href="structREPEAT__REC.htm">REPEAT_REC</a>
</li>
<li>
<a href="structTFont.htm">TFont</a>
</li>
<li>
<a href="structTILE.htm">TILE</a>
</li>
<li>
<a href="structTILE8.htm">TILE8</a>
</li>
<li>
<a href="structTMR__REC.htm">TMR_REC</a>
</li>
<li>
<a href="structTTC.htm">TTC</a>
</li>
<li>
<a href="structVECTOR.htm">VECTOR</a>
</li>
</ul>
</li>
<li>
<a href="functions.htm">Data Fields</a>
</li>
<li>
<a href="files.htm">File List</a>
<ul>
<li>
<a href="ase__drawg_8c.htm">ase_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg_8c.htm">bmp16_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg__b1cs_8c.htm">bmp16_drawg_b1cs.c</a>
</li>
<li>
<a href="bmp8__drawg_8c.htm">bmp8_drawg.c</a>
</li>
<li>
<a href="bmp8__drawg__b1cs_8c.htm">bmp8_drawg_b1cs.c</a>
</li>
<li>
<a href="chr4c__drawg__b1cts_8c.htm">chr4c_drawg_b1cts.c</a>
</li>
<li>
<a href="chr4c__drawg__b4cts_8c.htm">chr4c_drawg_b4cts.c</a>
</li>
<li>
<a href="chr4r__drawg__b1cts_8c.htm">chr4r_drawg_b1cts.c</a>
</li>
<li>
<a href="obj__drawg_8c.htm">obj_drawg.c</a>
</li>
<li>
<a href="se__drawg_8c.htm">se_drawg.c</a>
</li>
<li>
<a href="tonc_8h.htm">tonc.h</a>
</li>
<li>
<a href="tonc__bg_8c.htm">tonc_bg.c</a>
</li>
<li>
<a href="tonc__bg__affine_8c.htm">tonc_bg_affine.c</a>
</li>
<li>
<a href="tonc__bios_8h.htm">tonc_bios.h</a>
</li>
<li>
<a href="tonc__bmp16_8c.htm">tonc_bmp16.c</a>
</li>
<li>
<a href="tonc__bmp8_8c.htm">tonc_bmp8.c</a>
</li>
<li>
<a href="tonc__color_8c.htm">tonc_color.c</a>
</li>
<li>
<a href="tonc__core_8c.htm">tonc_core.c</a>
</li>
<li>
<a href="tonc__core_8h.htm">tonc_core.h</a>
</li>
<li>
<a href="tonc__input_8c.htm">tonc_input.c</a>
</li>
<li>
<a href="tonc__input_8h.htm">tonc_input.h</a>
</li>
<li>
<a href="tonc__irq_8c.htm">tonc_irq.c</a>
</li>
<li>
<a href="tonc__irq_8h.htm">tonc_irq.h</a>
</li>
<li>
<a href="tonc__legacy_8h.htm">tonc_legacy.h</a>
</li>
<li>
<a href="tonc__libgba_8h.htm">tonc_libgba.h</a>
</li>
<li>
<a href="tonc__math_8c.htm">tonc_math.c</a>
</li>
<li>
<a href="tonc__math_8h.htm">tonc_math.h</a>
</li>
<li>
<a href="tonc__memdef_8h.htm">tonc_memdef.h</a>
</li>
<li>
<a href="tonc__memmap_8h.htm">tonc_memmap.h</a>
</li>
<li>
<a href="tonc__nocash_8h.htm">tonc_nocash.h</a>
</li>
<li>
<a href="tonc__oam_8c.htm">tonc_oam.c</a>
</li>
<li>
<a href="tonc__oam_8h.htm">tonc_oam.h</a>
</li>
<li>
<a href="tonc__obj__affine_8c.htm">tonc_obj_affine.c</a>
</li>
<li>
<a href="tonc__sbmp16_8c.htm">tonc_sbmp16.c</a>
</li>
<li>
<a href="tonc__sbmp8_8c.htm">tonc_sbmp8.c</a>
</li>
<li>
<a href="tonc__schr4c_8c.htm">tonc_schr4c.c</a>
</li>
<li>
<a href="tonc__schr4r_8c.htm">tonc_schr4r.c</a>
</li>
<li>
<a href="tonc__surface_8c.htm">tonc_surface.c</a>
</li>
<li>
<a href="tonc__surface_8h.htm">tonc_surface.h</a>
</li>
<li>
<a href="tonc__text_8h.htm">tonc_text.h</a>
</li>
<li>
<a href="tonc__tte_8h.htm">tonc_tte.h</a>
</li>
<li>
<a href="tonc__types_8h.htm">tonc_types.h</a>
</li>
<li>
<a href="tonc__video_8c.htm">tonc_video.c</a>
</li>
<li>
<a href="tonc__video_8h.htm">tonc_video.h</a>
</li>
<li>
<a href="tte__init__ase_8c.htm">tte_init_ase.c</a>
</li>
<li>
<a href="tte__init__bmp_8c.htm">tte_init_bmp.c</a>
</li>
<li>
<a href="tte__init__chr4c_8c.htm">tte_init_chr4c.c</a>
</li>
<li>
<a href="tte__init__chr4r_8c.htm">tte_init_chr4r.c</a>
</li>
<li>
<a href="tte__init__obj_8c.htm">tte_init_obj.c</a>
</li>
<li>
<a href="tte__init__se_8c.htm">tte_init_se.c</a>
</li>
<li>
<a href="tte__iohook_8c.htm">tte_iohook.c</a>
</li>
<li>
<a href="tte__main_8c.htm">tte_main.c</a>
</li>
</ul>
</li>
<li>
<a href="globals.htm">Globals</a>
</li>
<li>
<a href="pages.htm">Related Pages</a>
<ul>
<li>
<a href="todo.htm">Todo List</a>
</li>
<li>
<a href="deprecated.htm">Deprecated List</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
</nav>


<section>
<header class="major">
<h2>Get in touch</h2>
</header>
<p>Submit feedback about this site to:</p>
<ul class="contact">
<li class="fa-envelope-o"><a href="https://documentation.help/cdn-cgi/l/email-protection#ef878a839f8b808c9caf9d8a87828e8181c18c80"><span class="__cf_email__" data-cfemail="4a222f263a2e2529390a382f22272b2424642925">[email&#160;protected]</span></a></li>
</ul>
</section>

<footer id="footer">
<p class="copyright">&copy; <a href="https://documentation.help">documentation.help</a>. Design: <a href="https://rehmann.co">rehmann.co</a>.</p>
<ul class="icons">

</ul>
</footer>
</div>
</div>
</div>

<script data-cfasync="false" src="../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="../assets/js/jquery.min.js" type="d9736d1c2bab0febdb2a89c7-text/javascript"></script>
<script src="../assets/js/skel.min.js" type="d9736d1c2bab0febdb2a89c7-text/javascript"></script>
<script src="../assets/js/util.js" type="d9736d1c2bab0febdb2a89c7-text/javascript"></script>
<!--[if lte IE 8]><script src="assets/js/ie/respond.min.js"></script><![endif]-->
<script src="../assets/js/main.js" type="d9736d1c2bab0febdb2a89c7-text/javascript"></script>
<script src="https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js" data-cf-settings="d9736d1c2bab0febdb2a89c7-|49" defer=""></script></body>
</html>
