<!DOCTYPE HTML>
<html>
<head>
<title>
libtonc: tonc_types.h File Reference - Tonclib Documentation</title>
<script src="../cdn-cgi/apps/head/MjlXTyhGypAwQFkqZX2sOa_9i4o.js"></script><link rel="alternate" href="documentation.pdf" /><link href="page_styles.css.html" rel="stylesheet" type="text/css" />
<link href="../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!--[if lte IE 8]><script src="assets/js/ie/html5shiv.js"></script><![endif]-->
<link rel="stylesheet" href="../assets/css/main.css" />
<link rel="shortcut icon" href="../favicon.ico">
<!--[if lte IE 9]><link rel="stylesheet" href="assets/css/ie9.css" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" href="assets/css/ie8.css" /><![endif]-->
<style>
.collapse > a{
  background: #cdf;
  cursor: pointer;
  display: block;
}
.collapse:focus{
  outline: none;
}
.collapse > div{
  display: none;
}
.collapse:focus div{
  display: block; 
}
</style>
</head>
<body>

<div id="wrapper">

<div id="main">
<div class="inner">

<header id="header">
<a href="https://documentation.help/" class="logo"><strong>documentation</strong>.HELP!</a> Tonclib Documentation </header>

<section>
<h1>libtonc: tonc_types.h File Reference</h1>
<h4>Tonclib</h4>
<div class="content">
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="18c2173cb29666bc885e8a69-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="18c2173cb29666bc885e8a69-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<div><div class="calibreMain">
<div class="calibreEbookContent">
<div class="calibreEbNavTop">
<a href="tonc__tte_8h.htm" class="calibreAPrev">previous page</a>
<a href="tonc__video_8c.htm" class="calibreANext"> next page</a>
</div>

<div class="tabs">
<ul class="calibre1">
<li class="current"><a href="main.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Main Page</span></a></li>
<li class="current"><a href="modules.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Modules</span></a></li>
<li class="current"><a href="classes.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Data Structures</span></a></li>
<li class="current"><a href="files.htm" class="pcalibre pcalibre3 pcalibre1 pcalibre2 calibre2"><span class="pcalibre4 calibre3">Files</span></a></li>
<li class="current"><a href="pages.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Related Pages</span></a></li>
</ul>
</div>
<h1 class="calibre6">tonc_types.h File Reference</h1><table border="0" cellpadding="0" cellspacing="0" class="calibre17">
<tr class="calibre18"><td class="calibre19" /></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><h2 class="calibre20">Data Structures</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structBLOCK.htm">BLOCK</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">8-word type for fast struct-copies <a href="structBLOCK.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structTILE.htm">TILE</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">4bpp tile type, for easy indexing and copying of 4-bit tiles <a href="structTILE.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structTILE8.htm">TILE8</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">8bpp tile type, for easy indexing and 8-bit tiles <a href="structTILE8.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structObjAffineSource.htm">ObjAffineSource</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Simple scale-rotation source struct. <a href="structObjAffineSource.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structBgAffineSource.htm">BgAffineSource</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Extended scale-rotate source struct. <a href="structBgAffineSource.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structObjAffineDest.htm">ObjAffineDest</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Simple scale-rotation destination struct, BG version. <a href="structObjAffineDest.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structBgAffineDest.htm">BgAffineDest</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Extended scale-rotate destination struct. <a href="structBgAffineDest.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structBG__POINT.htm">BG_POINT</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Regular bg points; range: :0010 - :001F. <a href="structBG__POINT.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structDMA__REC.htm">DMA_REC</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">DMA struct; range: 0400:00B0 - 0400:00DF. <a href="structDMA__REC.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structTMR__REC.htm">TMR_REC</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Timer struct, range: 0400:0100 - 0400:010F. <a href="structTMR__REC.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Object attributes. <a href="structOBJ__ATTR.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">struct  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Object affine parameters. <a href="structOBJ__AFFINE.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Defines</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1ccb2d4775bba0f3e7fe6f53a7c74e23"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#g1ccb2d4775bba0f3e7fe6f53a7c74e23">IWRAM_DATA</a>   __attribute__((section(".iwram")))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Put variable in IWRAM (default). <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g99c9f8272dfdc80bf6b9422557fe6c53"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#g99c9f8272dfdc80bf6b9422557fe6c53">EWRAM_DATA</a>   __attribute__((section(".ewram")))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Put variable in EWRAM. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ga8e1ce25154f795538808f4f296ccb11"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#ga8e1ce25154f795538808f4f296ccb11">EWRAM_BSS</a>   __attribute__((section(".sbss")))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Put <b class="calibre22">non</b>-initialized variable in EWRAM. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd95acfb589fdcfbf418e8b6a8de7a97f"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#gd95acfb589fdcfbf418e8b6a8de7a97f">IWRAM_CODE</a>   __attribute__((section(".iwram"), long_call))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Put function in IWRAM. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g7c3bc561d0781b105057575246b7ec4a"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#g7c3bc561d0781b105057575246b7ec4a">EWRAM_CODE</a>   __attribute__((section(".ewram"), long_call))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Put function in EWRAM. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gda9d7622865275ae4289dff050f1589e"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#gda9d7622865275ae4289dff050f1589e">ALIGN</a>(n)   __attribute__((aligned(n)))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Force a variable to an <em class="calibre27">n-byte</em> boundary. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#g280a402ab28c399fcc4168f2ed631acb">ALIGN4</a>   __attribute__((aligned(4)))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Force word alignment. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#g36d525cf4d116b2fe4ecc00222b256f1">PACKED</a>   __attribute__((packed))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Pack aggregate members. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#gc1e8a42306d8e67cb94ca31c3956ee78">DEPRECATED</a>   __attribute__((deprecated))</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Deprecated notice. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeAttr.htm#g2eb6f9e0395b47b8d5e3eeae4fe0c116">INLINE</a>   static inline</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Inline function declarator. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ga8cecfc5c5c054d2875c03e77b7be15d"></a>
#define </td><td class="memitemright"><b class="calibre22">TRUE</b>   1</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ga93f0eb578d23995850d61f7d61c55c1"></a>
#define </td><td class="memitemright"><b class="calibre22">FALSE</b>   0</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="070d2ce7b6bb7e5c05602aa8c308d0c4"></a>
#define </td><td class="memitemright"><b class="calibre22">NULL</b>   (void*)0</td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Typedefs</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g5d59b80f5f37021bdfbef8845066ab42"></a>
typedef const char *const </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypePrim.htm#g5d59b80f5f37021bdfbef8845066ab42">CSTR</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Type for consting a string as well as the pointer than points to it. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g774d105a82ba25e836aa6b6d78cd1203"></a>
typedef s32 </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fixed point type. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g3f7d6a7047d3cc1d04a6a1e10d7fdb00"></a>
typedef u16 </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Type for colors. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g7ef5c4b1b46ee8b401affecd48a2ed96"></a>
typedef u16 </td><td class="memitemright"><b class="calibre22">SCR_ENTRY</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0c8d5676f64b0e54a6418e6e18148b4b"></a>
typedef u16 </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g0c8d5676f64b0e54a6418e6e18148b4b">SE</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Type for screen entries. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1809592059dbdfeb9ce1bc02cd7a8be0"></a>
typedef u8 </td><td class="memitemright"><b class="calibre22">SCR_AFF_ENTRY</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g2ce63ae403893ef0c0d9479da19b8bf2"></a>
typedef u8 </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g2ce63ae403893ef0c0d9479da19b8bf2">SAE</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Type for affine screen entries. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd23266cc072bcf4ca3206f5325503901"></a>
typedef struct <a class="pcalibre5 el pcalibre6" href="structTILE.htm">TILE</a> </td><td class="memitemright"><b class="calibre22">TILE4</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g49f1c34f9bc2848069e616b79715e8f7"></a>
typedef u8 </td><td class="memitemright"><b class="calibre22">BOOL</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g61e5c2e6d830ecbdfec2bb04d5225114"></a>
typedef void(* </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g61e5c2e6d830ecbdfec2bb04d5225114">fnptr</a> )(void)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">void foo() function pointer <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g458cf8d0179f171b957c027fe63bf322"></a>
typedef void(* </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g458cf8d0179f171b957c027fe63bf322">fn_v_i</a> )(int)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">void foo(int x) function pointer <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g61ff319161d8c6faddb99f2d3d033a30"></a>
typedef int(* </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g61ff319161d8c6faddb99f2d3d033a30">fn_i_i</a> )(int)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">int foo(int x) function pointer <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">Base types</div></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="grouptext">Basic signed and unsigned types for 8, 16, 32 and 64-bit integers. <ul class="calibre13">
<li class="calibre14">
s# : signed #-bit integer. </li>
<li class="calibre14">
u#/u{type} : unsigned #-bit integer. </li>
<li class="calibre14">
e{type} : enum'ed #-bit integer.<p class="calibre7">
</p></li>
</ul>
<br class="calibre21" /><br class="calibre21" /></div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ged742c436da53c1080638ce6ef7d13de"></a>
typedef unsigned char </td><td class="memitemright"><b class="calibre22">u8</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0c8186d9b9b7880309c27230bbb5e69d"></a>
typedef unsigned char </td><td class="memitemright"><b class="calibre22">byte</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g65f85814a8290f9797005d3b28e7e5fc"></a>
typedef unsigned char </td><td class="memitemright"><b class="calibre22">uchar</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gf572b80811021a22a55750a7f3cf0815"></a>
typedef unsigned char </td><td class="memitemright"><b class="calibre22">echar</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g9e6c91d77e24643b888dbd1a1a590054"></a>
typedef unsigned short </td><td class="memitemright"><b class="calibre22">u16</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd0b89299434a0edee78165fb76669a1d"></a>
typedef unsigned short </td><td class="memitemright"><b class="calibre22">hword</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb95f123a6c9bcfee6a343170ef8c5f69"></a>
typedef unsigned short </td><td class="memitemright"><b class="calibre22">ushort</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g4acee1e4bb9fbc3607c746386ad43a5c"></a>
typedef unsigned short </td><td class="memitemright"><b class="calibre22">eshort</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g10e94b422ef0c20dcdec20d31a1f5049"></a>
typedef unsigned int </td><td class="memitemright"><b class="calibre22">u32</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gbad51e07ab6d26bec9f1f786c8d65bcd"></a>
typedef unsigned int </td><td class="memitemright"><b class="calibre22">word</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g91ad9478d81a7aaf2593e8d9c3d06a14"></a>
typedef unsigned int </td><td class="memitemright"><b class="calibre22">uint</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gc05606a0d3153bcc014fe6b165308fd4"></a>
typedef unsigned int </td><td class="memitemright"><b class="calibre22">eint</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd758b7a5c3f18ed79d2fcd23d9f16357"></a>
typedef unsigned <br class="calibre21" />
long long </td><td class="memitemright"><b class="calibre22">u64</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g151f780fb455885061d3b77ec1c90c03"></a>
typedef signed char </td><td class="memitemright"><b class="calibre22">s8</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g5ffa4f640862b25ba6d4f635b78bdbe1"></a>
typedef signed short </td><td class="memitemright"><b class="calibre22">s16</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0ce6887c26c1c49ad3be5710dd42bfd6"></a>
typedef signed int </td><td class="memitemright"><b class="calibre22">s32</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g4258bfb2c3a440d06c4aaa3c2b450dde"></a>
typedef signed long long </td><td class="memitemright"><b class="calibre22">s64</b></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">Volatile types</div></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="grouptext">Volatile types for registers <br class="calibre21" /><br class="calibre21" /></div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1a2a3100a902c32a55d8b08915bce044"></a>
typedef volatile u8 </td><td class="memitemright"><b class="calibre22">vu8</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g677aa1edce4bbb53741b1cc24eb4c035"></a>
typedef volatile u16 </td><td class="memitemright"><b class="calibre22">vu16</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gbcdd5d61f51cb4c472ac6637916cf72a"></a>
typedef volatile u32 </td><td class="memitemright"><b class="calibre22">vu32</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gce392b4d1c3911331b2fe5ddc99fdcba"></a>
typedef volatile u64 </td><td class="memitemright"><b class="calibre22">vu64</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g108e1a5e4c3e8322825ef7dcd45966ca"></a>
typedef volatile s8 </td><td class="memitemright"><b class="calibre22">vs8</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g84c4ebe721fa065d9bd514ce8d76c455"></a>
typedef volatile s16 </td><td class="memitemright"><b class="calibre22">vs16</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g6c6cf6e3aedfd399080c6f52c2870063"></a>
typedef volatile s32 </td><td class="memitemright"><b class="calibre22">vs32</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g484adfab567791250a9fdbf0db8d3144"></a>
typedef volatile s64 </td><td class="memitemright"><b class="calibre22">vs64</b></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">Const types</div></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="grouptext">Const types for const function aprameters <br class="calibre21" /><br class="calibre21" /></div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gfec4ecb1d0c6f7555b96832e3874ffa4"></a>
typedef const u8 </td><td class="memitemright"><b class="calibre22">cu8</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gea36407796a49b2f10d4a65129041ae7"></a>
typedef const u16 </td><td class="memitemright"><b class="calibre22">cu16</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gafd52a4ce346619f1d5566155bb8f0db"></a>
typedef const u32 </td><td class="memitemright"><b class="calibre22">cu32</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g98236f2c2ec37ca4397b1793c17aeab5"></a>
typedef const u64 </td><td class="memitemright"><b class="calibre22">cu64</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge6324c807c16782f33f33672a02d3e87"></a>
typedef const s8 </td><td class="memitemright"><b class="calibre22">cs8</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd0bf98b7006097d71cfe4729282e99f4"></a>
typedef const s16 </td><td class="memitemright"><b class="calibre22">cs16</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gdbbfe40eaf91710509032a2faa3640f3"></a>
typedef const s32 </td><td class="memitemright"><b class="calibre22">cs32</b></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g49ba27a8f62c4186b5ab6b92b534df4c"></a>
typedef const s64 </td><td class="memitemright"><b class="calibre22">cs64</b></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">IO register types</div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gbd684ef1bcc16437414d6f59f72572ac"></a>
typedef struct AFF_DST_EX </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a></td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Affine parameters for backgrounds; range : 0400:0020 - 0400:003F. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">PAL types</div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gc73bc9fa8211aeb4fa0e86a2dbb264a8"></a>
typedef <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gc73bc9fa8211aeb4fa0e86a2dbb264a8">PALBANK</a> [16]</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Palette bank type, for 16-color palette banks. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">VRAM array types</div></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="grouptext">These types allow VRAM access as arrays or matrices in their most natural types. <br class="calibre21" /><br class="calibre21" /></div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g29b89654fdcd4d3e0df42cee3ae95615"></a>
typedef SCR_ENTRY </td><td class="memitemright"><b class="calibre22">SCREENLINE</b> [32]</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd7bedfc3e721b8cb3cc03731667fcf90"></a>
typedef SCR_ENTRY </td><td class="memitemright"><b class="calibre22">SCREENMAT</b> [32][32]</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g7af49c74035fb5884f17fdd8a5b6ec77"></a>
typedef SCR_ENTRY </td><td class="memitemright"><b class="calibre22">SCREENBLOCK</b> [1024]</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gdf42817ef5fcb26f817588119cc750ca"></a>
typedef <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td><td class="memitemright"><b class="calibre22">M3LINE</b> [240]</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g240b7526d9a98756f5d1e1dbb977397c"></a>
typedef u8 </td><td class="memitemright"><b class="calibre22">M4LINE</b> [240]</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g6fe50a02935c04db9dc8f1346ad57d96"></a>
typedef <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td><td class="memitemright"><b class="calibre22">M5LINE</b> [160]</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g65e5696109b1fa085d05b78f9bf34b58"></a>
typedef <a class="pcalibre5 el pcalibre6" href="structTILE.htm">TILE</a> </td><td class="memitemright"><b class="calibre22">CHARBLOCK</b> [512]</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ga2201a12071f985d0dc9716ac9e18953"></a>
typedef <a class="pcalibre5 el pcalibre6" href="structTILE8.htm">TILE8</a> </td><td class="memitemright"><b class="calibre22">CHARBLOCK8</b> [256]</td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Enumerations</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">enum  </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#gf6a258d8f3ee5206d682d799316314b1">bool</a> { <b class="calibre22">false</b>,
<b class="calibre22">true</b>
}</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Boolean type. <br class="calibre21" /></td></tr>
</table>
<hr class="calibre9" /><a name="_details" class="pcalibre5 pcalibre6 calibre8"></a><h2 class="calibre20">Detailed Description</h2>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Author:</b></dt><dd class="calibre23">J Vijn </dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Date:</b></dt><dd class="calibre23">20060508 - 20080111 </dd></dl>
<hr size="1" class="calibre9" /><address class="calibre10"><small class="calibre11">Generated on Mon Aug 25 17:03:56 2008 for libtonc by 
<a href="http://www.doxygen.org/index.html" class="pcalibre5 pcalibre6 calibre8">
<img src="doxygen.png" alt="doxygen" border="0" class="calibre12" /></a> 1.5.3 </small></address>
</div>
<div class="calibreEbNav">
<a href="tonc__tte_8h.htm" class="calibreAPrev">previous page</a>
<a href="index.html" class="calibreAHome"> start</a>
<a href="tonc__video_8c.htm" class="calibreANext"> next page</a>
</div>
</div>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="18c2173cb29666bc885e8a69-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="18c2173cb29666bc885e8a69-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</table>
</div>
</section>

</div>
</div>


<div id="sidebar">
<div class="inner">


<nav id="menu">
<header class="major">
<h2>Menu</h2>
</header>
<ul>
<li><a href="https://documentation.help/">Homepage</a></li> 
</ul>
<div><div class="calibreTocIndex">
<h2> Table of contents</h2>
<div>
<ul>
<li>
<a href="main.htm">Tonclib 1.4 (20080825)</a>
</li>
<li>
<a href="modules.htm">Modules</a>
<ul>
<li>
<a href="group__grpBios.htm">Bios Calls</a>
<ul>
<li>
<a href="group__grpBiosDef.htm">BIOS informalities</a>
</li>
<li>
<a href="group__grpBiosMain.htm">BIOS functions</a>
</li>
<li>
<a href="group__grpBiosEx.htm">More BIOS functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpCore.htm">Core</a>
<ul>
<li>
<a href="group__grpCoreBit.htm">Bit(field) macros</a>
</li>
<li>
<a href="group__grpData.htm">Data routines</a>
</li>
<li>
<a href="group__grpCoreMisc.htm">Miscellaneous routines</a>
</li>
<li>
<a href="group__grpNocash.htm">no$gba debugging</a>
</li>
</ul>
</li>
<li>
<a href="group__grpDma.htm">DMA</a>
</li>
<li>
<a href="group__grpInput.htm">Input</a>
</li>
<li>
<a href="group__grpIrq.htm">Interrupt</a>
</li>
<li>
<a href="group__grpMath.htm">Math</a>
<ul>
<li>
<a href="group__grpMathBase.htm">Base math</a>
</li>
<li>
<a href="group__grpMathFixed.htm">Fixed point math</a>
</li>
<li>
<a href="group__grpMathLut.htm">Look-up tables</a>
</li>
<li>
<a href="group__grpMathPoint.htm">Point functions</a>
</li>
<li>
<a href="group__grpMathVector.htm">Vector functions</a>
</li>
<li>
<a href="group__grpMathRect.htm">Rect functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemmap.htm">Memory Map</a>
<ul>
<li>
<a href="group__grpMemBits.htm">Memory map bit(fields)</a>
<ul>
<li>
<a href="group__grpVideoDCNT.htm">Display Control Flags</a>
</li>
<li>
<a href="group__grpVideoDSTAT.htm">Display Status Flags</a>
</li>
<li>
<a href="group__grpVideoBGCNT.htm">Background Control Flags</a>
</li>
<li>
<a href="group__grpVideoGfx.htm">Graphic effects</a>
</li>
<li>
<a href="group__grpVideoBLD.htm">Blend Flags</a>
</li>
<li>
<a href="group__grpAudioSSW.htm">Tone Generator, Sweep Flags</a>
</li>
<li>
<a href="group__grpAudioSSQR.htm">Tone Generator, Square Flags</a>
</li>
<li>
 <a href="group__grpAudioSFREQ.htm">Tone Generator, Frequency Flags</a>
</li>
<li>
<a href="group__grpAudioSDMG.htm">Tone Generator, Control Flags</a>
</li>
<li>
<a href="group__grpAudioSDS.htm">Direct Sound Flags</a>
</li>
<li>
<a href="group__grpAudioSSTAT.htm">Sound Status Flags</a>
</li>
<li>
<a href="group__grpAudioDMA.htm">DMA Control Flags</a>
</li>
<li>
<a href="group__grpTimerTM.htm">Timer Control Flags</a>
</li>
<li>
<a href="group__grpSioCnt.htm">Serial I/O Control</a>
</li>
<li>
<a href="group__grpCommR.htm">Comm control.</a>
</li>
<li>
<a href="group__grpInputKEY.htm">Key Flags</a>
</li>
<li>
<a href="group__grpInputKCNT.htm">Key Control Flags</a>
</li>
<li>
<a href="group__grpIrqIRQ.htm">Interrupt Flags</a>
</li>
<li>
<a href="group__grpMiscWS.htm">Waitstate Control Flags</a>
</li>
<li>
<a href="group__grpVideoSE.htm">Screen-entry Flags</a>
</li>
<li>
<a href="group__grpVideoAttr0.htm">Object Attribute 0 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr1.htm">Object Attribute 1 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr2.htm">Object Attribute 2 Flags</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemArray.htm">Memory mapped arrays</a>
</li>
<li>
<a href="group__grpReg.htm">IO Registers</a>
</li>
<li>
<a href="group__grpRegAlt.htm">IO Alternates</a>
</li>
</ul>
</li>
<li>
<a href="group__grpAudio.htm">Sound</a>
</li>
<li>
<a href="group__grpTTE.htm">Tonc Text Engine</a>
<ul>
<li>
<a href="group__grpTTEOps.htm">Operations</a>
</li>
<li>
<a href="group__grpTTEAttr.htm">Attributes</a>
</li>
<li>
<a href="group__grpTTEConio.htm">Console IO</a>
</li>
<li>
<a href="group__grpTTEMap.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTTEChr4c.htm">Character text, column-major</a>
</li>
<li>
<a href="group__grpTTEChr4r.htm">Character text, row-major</a>
</li>
<li>
<a href="group__grpTTEBmp.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTTEObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpText.htm">Old Text</a>
<ul>
<li>
<a href="group__grpTextTile.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTextBm.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTextObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTimer.htm">Timer</a>
</li>
<li>
<a href="group__grpVideo.htm">Video</a>
<ul>
<li>
<a href="group__grpSurface.htm">Surface functions</a>
<ul>
<li>
<a href="group__grpSbmp16.htm">16bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSbmp8.htm">8bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSchr4c.htm">4bpp tiled surfaces, column major</a>
</li>
<li>
<a href="group__grpSchr4r.htm">4bpp tiled surfaces, row major</a>
</li>
</ul>
</li>
<li>
<a href="group__grpVideoPal.htm">Colors</a>
</li>
<li>
<a href="group__grpVideoBg.htm">Tiled Backgrounds</a>
</li>
<li>
<a href="group__grpVideoBmp.htm">Bitmaps</a>
</li>
<li>
<a href="group__grpVideoObj.htm">Objects</a>
</li>
<li>
<a href="group__grpVideoAffine.htm">Affine functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTypes.htm">Types and attributes</a>
<ul>
<li>
<a href="group__grpTypeAttr.htm">Type attributes</a>
</li>
<li>
<a href="group__grpTypePrim.htm">Primary types</a>
</li>
<li>
<a href="group__grpTypeSec.htm">Secondary types</a>
</li>
<li>
<a href="group__grpTypeTert.htm">Tertiary types</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="annotated.htm">Data Structures</a>
<ul>
<li>
<a href="structBG__POINT.htm">BG_POINT</a>
</li>
<li>
<a href="structBgAffineDest.htm">BgAffineDest</a>
</li>
<li>
<a href="structBgAffineSource.htm">BgAffineSource</a>
</li>
<li>
<a href="structBLOCK.htm">BLOCK</a>
</li>
<li>
<a href="structBUP.htm">BUP</a>
</li>
<li>
<a href="structDMA__REC.htm">DMA_REC</a>
</li>
<li>
<a href="structIRQ__REC.htm">IRQ_REC</a>
</li>
<li>
<a href="structIRQ__SENDER.htm">IRQ_SENDER</a>
</li>
<li>
<a href="structMultiBootParam.htm">MultiBootParam</a>
</li>
<li>
<a href="structOBJ__AFFINE.htm">OBJ_AFFINE</a>
</li>
<li>
<a href="structOBJ__ATTR.htm">OBJ_ATTR</a>
</li>
<li>
<a href="structObjAffineDest.htm">ObjAffineDest</a>
</li>
<li>
<a href="structObjAffineSource.htm">ObjAffineSource</a>
</li>
<li>
<a href="structPOINT32.htm">POINT32</a>
</li>
<li>
<a href="structRECT32.htm">RECT32</a>
</li>
<li>
<a href="structREPEAT__REC.htm">REPEAT_REC</a>
</li>
<li>
<a href="structTFont.htm">TFont</a>
</li>
<li>
<a href="structTILE.htm">TILE</a>
</li>
<li>
<a href="structTILE8.htm">TILE8</a>
</li>
<li>
<a href="structTMR__REC.htm">TMR_REC</a>
</li>
<li>
<a href="structTTC.htm">TTC</a>
</li>
<li>
<a href="structVECTOR.htm">VECTOR</a>
</li>
</ul>
</li>
<li>
<a href="functions.htm">Data Fields</a>
</li>
<li>
<a href="files.htm">File List</a>
<ul>
<li>
<a href="ase__drawg_8c.htm">ase_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg_8c.htm">bmp16_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg__b1cs_8c.htm">bmp16_drawg_b1cs.c</a>
</li>
<li>
<a href="bmp8__drawg_8c.htm">bmp8_drawg.c</a>
</li>
<li>
<a href="bmp8__drawg__b1cs_8c.htm">bmp8_drawg_b1cs.c</a>
</li>
<li>
<a href="chr4c__drawg__b1cts_8c.htm">chr4c_drawg_b1cts.c</a>
</li>
<li>
<a href="chr4c__drawg__b4cts_8c.htm">chr4c_drawg_b4cts.c</a>
</li>
<li>
<a href="chr4r__drawg__b1cts_8c.htm">chr4r_drawg_b1cts.c</a>
</li>
<li>
<a href="obj__drawg_8c.htm">obj_drawg.c</a>
</li>
<li>
<a href="se__drawg_8c.htm">se_drawg.c</a>
</li>
<li>
<a href="tonc_8h.htm">tonc.h</a>
</li>
<li>
<a href="tonc__bg_8c.htm">tonc_bg.c</a>
</li>
<li>
<a href="tonc__bg__affine_8c.htm">tonc_bg_affine.c</a>
</li>
<li>
<a href="tonc__bios_8h.htm">tonc_bios.h</a>
</li>
<li>
<a href="tonc__bmp16_8c.htm">tonc_bmp16.c</a>
</li>
<li>
<a href="tonc__bmp8_8c.htm">tonc_bmp8.c</a>
</li>
<li>
<a href="tonc__color_8c.htm">tonc_color.c</a>
</li>
<li>
<a href="tonc__core_8c.htm">tonc_core.c</a>
</li>
<li>
<a href="tonc__core_8h.htm">tonc_core.h</a>
</li>
<li>
<a href="tonc__input_8c.htm">tonc_input.c</a>
</li>
<li>
<a href="tonc__input_8h.htm">tonc_input.h</a>
</li>
<li>
<a href="tonc__irq_8c.htm">tonc_irq.c</a>
</li>
<li>
<a href="tonc__irq_8h.htm">tonc_irq.h</a>
</li>
<li>
<a href="tonc__legacy_8h.htm">tonc_legacy.h</a>
</li>
<li>
<a href="tonc__libgba_8h.htm">tonc_libgba.h</a>
</li>
<li>
<a href="tonc__math_8c.htm">tonc_math.c</a>
</li>
<li>
<a href="tonc__math_8h.htm">tonc_math.h</a>
</li>
<li>
<a href="tonc__memdef_8h.htm">tonc_memdef.h</a>
</li>
<li>
<a href="tonc__memmap_8h.htm">tonc_memmap.h</a>
</li>
<li>
<a href="tonc__nocash_8h.htm">tonc_nocash.h</a>
</li>
<li>
<a href="tonc__oam_8c.htm">tonc_oam.c</a>
</li>
<li>
<a href="tonc__oam_8h.htm">tonc_oam.h</a>
</li>
<li>
<a href="tonc__obj__affine_8c.htm">tonc_obj_affine.c</a>
</li>
<li>
<a href="tonc__sbmp16_8c.htm">tonc_sbmp16.c</a>
</li>
<li>
<a href="tonc__sbmp8_8c.htm">tonc_sbmp8.c</a>
</li>
<li>
<a href="tonc__schr4c_8c.htm">tonc_schr4c.c</a>
</li>
<li>
<a href="tonc__schr4r_8c.htm">tonc_schr4r.c</a>
</li>
<li>
<a href="tonc__surface_8c.htm">tonc_surface.c</a>
</li>
<li>
<a href="tonc__surface_8h.htm">tonc_surface.h</a>
</li>
<li>
<a href="tonc__text_8h.htm">tonc_text.h</a>
</li>
<li>
<a href="tonc__tte_8h.htm">tonc_tte.h</a>
</li>
<li>
<a href="tonc__types_8h.htm">tonc_types.h</a>
</li>
<li>
<a href="tonc__video_8c.htm">tonc_video.c</a>
</li>
<li>
<a href="tonc__video_8h.htm">tonc_video.h</a>
</li>
<li>
<a href="tte__init__ase_8c.htm">tte_init_ase.c</a>
</li>
<li>
<a href="tte__init__bmp_8c.htm">tte_init_bmp.c</a>
</li>
<li>
<a href="tte__init__chr4c_8c.htm">tte_init_chr4c.c</a>
</li>
<li>
<a href="tte__init__chr4r_8c.htm">tte_init_chr4r.c</a>
</li>
<li>
<a href="tte__init__obj_8c.htm">tte_init_obj.c</a>
</li>
<li>
<a href="tte__init__se_8c.htm">tte_init_se.c</a>
</li>
<li>
<a href="tte__iohook_8c.htm">tte_iohook.c</a>
</li>
<li>
<a href="tte__main_8c.htm">tte_main.c</a>
</li>
</ul>
</li>
<li>
<a href="globals.htm">Globals</a>
</li>
<li>
<a href="pages.htm">Related Pages</a>
<ul>
<li>
<a href="todo.htm">Todo List</a>
</li>
<li>
<a href="deprecated.htm">Deprecated List</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
</nav>


<section>
<header class="major">
<h2>Get in touch</h2>
</header>
<p>Submit feedback about this site to:</p>
<ul class="contact">
<li class="fa-envelope-o"><a href="https://documentation.help/cdn-cgi/l/email-protection#375f525b47535854447745525f5a565959195458"><span class="__cf_email__" data-cfemail="bfd7dad3cfdbd0dcccffcddad7d2ded1d191dcd0">[email&#160;protected]</span></a></li>
</ul>
</section>

<footer id="footer">
<p class="copyright">&copy; <a href="https://documentation.help">documentation.help</a>. Design: <a href="https://rehmann.co">rehmann.co</a>.</p>
<ul class="icons">

</ul>
</footer>
</div>
</div>
</div>

<script data-cfasync="false" src="../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="../assets/js/jquery.min.js" type="18c2173cb29666bc885e8a69-text/javascript"></script>
<script src="../assets/js/skel.min.js" type="18c2173cb29666bc885e8a69-text/javascript"></script>
<script src="../assets/js/util.js" type="18c2173cb29666bc885e8a69-text/javascript"></script>
<!--[if lte IE 8]><script src="assets/js/ie/respond.min.js"></script><![endif]-->
<script src="../assets/js/main.js" type="18c2173cb29666bc885e8a69-text/javascript"></script>
<script src="https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js" data-cf-settings="18c2173cb29666bc885e8a69-|49" defer=""></script></body>
</html>
