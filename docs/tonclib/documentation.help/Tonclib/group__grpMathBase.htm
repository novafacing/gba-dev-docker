<!DOCTYPE HTML>
<html>
<head>
<title>
libtonc: Base math - Tonclib Documentation</title>
<script src="../cdn-cgi/apps/head/MjlXTyhGypAwQFkqZX2sOa_9i4o.js"></script><link rel="alternate" href="documentation.pdf" /><link href="page_styles.css.html" rel="stylesheet" type="text/css" />
<link href="../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!--[if lte IE 8]><script src="assets/js/ie/html5shiv.js"></script><![endif]-->
<link rel="stylesheet" href="../assets/css/main.css" />
<link rel="shortcut icon" href="../favicon.ico">
<!--[if lte IE 9]><link rel="stylesheet" href="assets/css/ie9.css" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" href="assets/css/ie8.css" /><![endif]-->
<style>
.collapse > a{
  background: #cdf;
  cursor: pointer;
  display: block;
}
.collapse:focus{
  outline: none;
}
.collapse > div{
  display: none;
}
.collapse:focus div{
  display: block; 
}
</style>
</head>
<body>

<div id="wrapper">

<div id="main">
<div class="inner">

<header id="header">
<a href="https://documentation.help/" class="logo"><strong>documentation</strong>.HELP!</a> Tonclib Documentation </header>

<section>
<h1>libtonc: Base math</h1>
<h4>Tonclib</h4>
<div class="content">
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="54857c8ddc4f69b8b5ba2f8a-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="54857c8ddc4f69b8b5ba2f8a-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<div><div class="calibreMain">
<div class="calibreEbookContent">
<div class="calibreEbNavTop">
<a href="group__grpMath.htm" class="calibreAPrev">previous page</a>
<a href="group__grpMathFixed.htm" class="calibreANext"> next page</a>
</div>

<div class="tabs">
<ul class="calibre1">
<li class="current"><a href="main.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Main Page</span></a></li>
<li class="current"><a href="modules.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Modules</span></a></li>
<li class="current"><a href="classes.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Data Structures</span></a></li>
<li class="current"><a href="files.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Files</span></a></li>
<li class="current"><a href="pages.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Related Pages</span></a></li>
</ul>
</div>
<h1 class="calibre6">Base math<br class="calibre24" />
<small class="calibre25">
[<a class="el1 pcalibre5 pcalibre6" href="group__grpMath.htm">Math</a>]</small>
</h1>Basic math macros and functions like MIN, MAX.
<a href="group__grpMathBase.htm#_details" class="pcalibre5 pcalibre6 calibre8">More...</a><table border="0" cellpadding="0" cellspacing="0" class="calibre17">
<tr class="calibre18"><td class="calibre19" /></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">core math macros</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0f3c13fcb6324ea15cc7dd90467f5993"></a>
INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g0f3c13fcb6324ea15cc7dd90467f5993">sgn</a> (int x)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the sign of <em class="calibre27">x</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g3a3a3b5c94b353addef6844b4c2cfbc9"></a>
INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g3a3a3b5c94b353addef6844b4c2cfbc9">sgn3</a> (int x)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Tri-state sign of <em class="calibre27">x:</em> -1 for negative, 0 for 0, +1 for positive. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g970dcb32f1b82ff8a3a5ff4496aa4e84"></a>
INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g970dcb32f1b82ff8a3a5ff4496aa4e84">max</a> (int a, int b)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the maximum of <em class="calibre27">a</em> and <em class="calibre27">b</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g173c7f9d57402f3c5e320b1d95094c89"></a>
INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g173c7f9d57402f3c5e320b1d95094c89">min</a> (int a, int b)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the minimum of <em class="calibre27">a</em> and <em class="calibre27">b</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g996f7be338ccb40d1a2a5abc1ad61759"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g996f7be338ccb40d1a2a5abc1ad61759">ABS</a>(x)   ( (x)&gt;=0 ? (x) : -(x) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the absolute value of <em class="calibre27">x</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g95ed41486ca0ed53262e4b8934d4afac"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g95ed41486ca0ed53262e4b8934d4afac">SGN</a>(x)   ( (x)&gt;=0 ? 1 : -1 )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the sign of <em class="calibre27">x</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge929dbc611a2a2d58173d2bc675238a1"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#ge929dbc611a2a2d58173d2bc675238a1">SGN2</a>   SGN</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the absolute value of <em class="calibre27">x</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g62e9287c7610b678b061e184b424ad1d"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g62e9287c7610b678b061e184b424ad1d">SGN3</a>(x)   ( (x)&gt;0 ? 1 : ( (x)&lt;0 ? -1 : 0) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Tri-state sign: -1 for negative, 0 for 0, +1 for positive. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gfa99ec4acc4ecb2dc3c2d05da15d0e3f"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#gfa99ec4acc4ecb2dc3c2d05da15d0e3f">MAX</a>(a, b)   ( ((a) &gt; (b)) ? (a) : (b) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the maximum of <em class="calibre27">a</em> and <em class="calibre27">b</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g3acffbd305ee72dcd4593c0d8af64a4f"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g3acffbd305ee72dcd4593c0d8af64a4f">MIN</a>(a, b)   ( ((a) &lt; (b)) ? (a) : (b) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the minimum of <em class="calibre27">a</em> and <em class="calibre27">b</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g224018629d1be06b83054e351010ecb3"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g224018629d1be06b83054e351010ecb3">SWAP2</a>(a, b)   do { a=(a)-(b); b=(a)+(b); a=(b)-(a); } while(0)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">In-place swap. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gac9b57651bcead0a7564efe6460e5310"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#gac9b57651bcead0a7564efe6460e5310">SWAP</a>   SWAP2</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get the absolute value of <em class="calibre27">x</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g963775256c6eb0e22b5ece86ee8d85e6"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g963775256c6eb0e22b5ece86ee8d85e6">SWAP3</a>(a, b, tmp)   do { (tmp)=(a); (a)=(b); (b)=(tmp); } while(0)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Swaps <em class="calibre27">a</em> and <em class="calibre27">b</em>, using <em class="calibre27">tmp</em> as a temporary. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Boundary response macros</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g87f2ab2b992ce358b3d4a99c4398e850"></a>
INLINE BOOL </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g87f2ab2b992ce358b3d4a99c4398e850">in_range</a> (int x, int min, int max)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Range check. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#gaa5d31a3962122e586af1de8aff0b024">clamp</a> (int x, int min, int max)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Truncates <em class="calibre27">x</em> to stay in range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#ge2901b9ae2e6b02b8f469e54592a8e61">reflect</a> (int x, int min, int max)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Reflects <em class="calibre27">x</em> at boundaries <em class="calibre27">min</em> and <em class="calibre27">max</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g3e2e08fb920a53027252c0ee5b4dad87"></a>
INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g3e2e08fb920a53027252c0ee5b4dad87">wrap</a> (int x, int min, int max)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Wraps <em class="calibre27">x</em> to stay in range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g850e0c099fe476a6c9da190cb5442a8f"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g850e0c099fe476a6c9da190cb5442a8f">IN_RANGE</a>(x, min, max)   ( ((x)&gt;=(min)) &amp;&amp; ((x)&lt;(max)) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Range check. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g33bd933f5d4895b3b6d18c2d5fed91a0">CLAMP</a>(x, min, max)   ( (x)&gt;=(max) ? ((max)-1) : ( ((x)&lt;(min)) ? (min) : (x) ) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Truncates <em class="calibre27">x</em> to stay in range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#g894931295da9eb0fad8e962516537b2a">REFLECT</a>(x, min, max)   ( (x)&gt;=(max) ? 2*((max)-1)-(x) : ( ((x)&lt;(min)) ? 2*(min)-(x) : (x) ) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Reflects <em class="calibre27">x</em> at boundaries <em class="calibre27">min</em> and <em class="calibre27">max</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gf36a0a801bf9016d5c2cbe066a45ff41"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpMathBase.htm#gf36a0a801bf9016d5c2cbe066a45ff41">WRAP</a>(x, min, max)   ( (x)&gt;=(max) ? (x)+(min)-(max) : ( ((x)&lt;(min)) ? (x)+(max)-(min) : (x) ) )</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Wraps <em class="calibre27">x</em> to stay in range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>. <br class="calibre21" /></td></tr>
</table>
<hr class="calibre9" /><a name="_details" class="pcalibre5 pcalibre6 calibre8"></a><h2 class="calibre20">Detailed Description</h2>
Basic math macros and functions like MIN, MAX.
<p class="calibre7">
<hr class="calibre9" /><h2 class="calibre20">Define Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="g33bd933f5d4895b3b6d18c2d5fed91a0"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">#define CLAMP </td>
<td class="calibre19">(</td>
<td class="paramtype">x, </td></tr><tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">min, </td></tr><tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">max </td>
<td class="paramname"> </td>
<td class="calibre19"> ) </td>
<td width="100%" class="calibre19">   ( (x)&gt;=(max) ? ((max)-1) : ( ((x)&lt;(min)) ? (min) : (x) ) )</td>
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Truncates <em class="calibre27">x</em> to stay in range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>.
</p><p class="calibre7">
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Returns:</b></dt><dd class="calibre23">Truncated value of <em class="calibre27">x</em>. </dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23"><em class="calibre27">max</em> is exclusive! </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g894931295da9eb0fad8e962516537b2a"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">#define REFLECT </td>
<td class="calibre19">(</td>
<td class="paramtype">x, </td></tr><tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">min, </td></tr><tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">max </td>
<td class="paramname"> </td>
<td class="calibre19"> ) </td>
<td width="100%" class="calibre19">   ( (x)&gt;=(max) ? 2*((max)-1)-(x) : ( ((x)&lt;(min)) ? 2*(min)-(x) : (x) ) )</td>
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Reflects <em class="calibre27">x</em> at boundaries <em class="calibre27">min</em> and <em class="calibre27">max</em>.
</p><p class="calibre7">
If <em class="calibre27">x</em> is outside the range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>, it'll be placed inside again with the same distance to the 'wall', but on the other side. Example for lower border: y = <em class="calibre27">min</em> - (<em class="calibre27">x-</em> <em class="calibre27">min</em>) = 2*<em class="calibre27">min</em> + <em class="calibre27">x</em>. <dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Returns:</b></dt><dd class="calibre23">Reflected value of <em class="calibre27">x</em>. </dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23"><em class="calibre27">max</em> is exclusive! </dd></dl>
</p></div>
</div></p><p class="calibre7">
<hr class="calibre9" /><h2 class="calibre20">Function Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="gaa5d31a3962122e586af1de8aff0b024"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE int clamp </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">min</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">max</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Truncates <em class="calibre27">x</em> to stay in range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>.
</p><p class="calibre7">
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Returns:</b></dt><dd class="calibre23">Truncated value of <em class="calibre27">x</em>. </dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23"><em class="calibre27">max</em> is exclusive! </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="ge2901b9ae2e6b02b8f469e54592a8e61"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE int reflect </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">min</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">max</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Reflects <em class="calibre27">x</em> at boundaries <em class="calibre27">min</em> and <em class="calibre27">max</em>.
</p><p class="calibre7">
If <em class="calibre27">x</em> is outside the range [<em class="calibre27">min</em>, <em class="calibre27">max&gt;</em>, it'll be placed inside again with the same distance to the 'wall', but on the other side. Example for lower border: y = <em class="calibre27">min</em> - (<em class="calibre27">x-</em> <em class="calibre27">min</em>) = 2*<em class="calibre27">min</em> + <em class="calibre27">x</em>. <dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Returns:</b></dt><dd class="calibre23">Reflected value of <em class="calibre27">x</em>. </dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23"><em class="calibre27">max</em> is exclusive! </dd></dl>
</p></div>
</div></p><p class="calibre7">
<hr size="1" class="calibre9" /><address class="calibre10"><small class="calibre11">Generated on Mon Aug 25 17:03:57 2008 for libtonc by 
<a href="http://www.doxygen.org/index.html" class="pcalibre5 pcalibre6 calibre8">
<img src="doxygen.png" alt="doxygen" border="0" class="calibre12" /></a> 1.5.3 </small></address>
</p>
</div>
<div class="calibreEbNav">
<a href="group__grpMath.htm" class="calibreAPrev">previous page</a>
<a href="index.html" class="calibreAHome"> start</a>
<a href="group__grpMathFixed.htm" class="calibreANext"> next page</a>
</div>
</div>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="54857c8ddc4f69b8b5ba2f8a-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="54857c8ddc4f69b8b5ba2f8a-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</table>
</div>
</section>

</div>
</div>


<div id="sidebar">
<div class="inner">


<nav id="menu">
<header class="major">
<h2>Menu</h2>
</header>
<ul>
<li><a href="https://documentation.help/">Homepage</a></li> 
</ul>
<div><div class="calibreTocIndex">
 <h2> Table of contents</h2>
<div>
<ul>
<li>
<a href="main.htm">Tonclib 1.4 (20080825)</a>
</li>
<li>
<a href="modules.htm">Modules</a>
<ul>
<li>
<a href="group__grpBios.htm">Bios Calls</a>
<ul>
<li>
<a href="group__grpBiosDef.htm">BIOS informalities</a>
</li>
<li>
<a href="group__grpBiosMain.htm">BIOS functions</a>
</li>
<li>
<a href="group__grpBiosEx.htm">More BIOS functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpCore.htm">Core</a>
<ul>
<li>
<a href="group__grpCoreBit.htm">Bit(field) macros</a>
</li>
<li>
<a href="group__grpData.htm">Data routines</a>
</li>
<li>
<a href="group__grpCoreMisc.htm">Miscellaneous routines</a>
</li>
<li>
<a href="group__grpNocash.htm">no$gba debugging</a>
</li>
</ul>
</li>
<li>
<a href="group__grpDma.htm">DMA</a>
</li>
<li>
<a href="group__grpInput.htm">Input</a>
</li>
<li>
<a href="group__grpIrq.htm">Interrupt</a>
</li>
<li>
<a href="group__grpMath.htm">Math</a>
<ul>
<li>
<a href="group__grpMathBase.htm">Base math</a>
</li>
<li>
<a href="group__grpMathFixed.htm">Fixed point math</a>
</li>
<li>
<a href="group__grpMathLut.htm">Look-up tables</a>
</li>
<li>
<a href="group__grpMathPoint.htm">Point functions</a>
</li>
<li>
<a href="group__grpMathVector.htm">Vector functions</a>
</li>
<li>
<a href="group__grpMathRect.htm">Rect functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemmap.htm">Memory Map</a>
<ul>
<li>
<a href="group__grpMemBits.htm">Memory map bit(fields)</a>
<ul>
<li>
<a href="group__grpVideoDCNT.htm">Display Control Flags</a>
</li>
<li>
<a href="group__grpVideoDSTAT.htm">Display Status Flags</a>
</li>
<li>
<a href="group__grpVideoBGCNT.htm">Background Control Flags</a>
</li>
<li>
<a href="group__grpVideoGfx.htm">Graphic effects</a>
</li>
<li>
<a href="group__grpVideoBLD.htm">Blend Flags</a>
</li>
<li>
<a href="group__grpAudioSSW.htm">Tone Generator, Sweep Flags</a>
</li>
<li>
 <a href="group__grpAudioSSQR.htm">Tone Generator, Square Flags</a>
</li>
<li>
<a href="group__grpAudioSFREQ.htm">Tone Generator, Frequency Flags</a>
</li>
<li>
<a href="group__grpAudioSDMG.htm">Tone Generator, Control Flags</a>
</li>
<li>
<a href="group__grpAudioSDS.htm">Direct Sound Flags</a>
</li>
<li>
<a href="group__grpAudioSSTAT.htm">Sound Status Flags</a>
</li>
<li>
<a href="group__grpAudioDMA.htm">DMA Control Flags</a>
</li>
<li>
<a href="group__grpTimerTM.htm">Timer Control Flags</a>
</li>
<li>
<a href="group__grpSioCnt.htm">Serial I/O Control</a>
</li>
<li>
<a href="group__grpCommR.htm">Comm control.</a>
</li>
<li>
<a href="group__grpInputKEY.htm">Key Flags</a>
</li>
<li>
<a href="group__grpInputKCNT.htm">Key Control Flags</a>
</li>
<li>
<a href="group__grpIrqIRQ.htm">Interrupt Flags</a>
</li>
<li>
<a href="group__grpMiscWS.htm">Waitstate Control Flags</a>
</li>
<li>
<a href="group__grpVideoSE.htm">Screen-entry Flags</a>
</li>
<li>
<a href="group__grpVideoAttr0.htm">Object Attribute 0 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr1.htm">Object Attribute 1 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr2.htm">Object Attribute 2 Flags</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemArray.htm">Memory mapped arrays</a>
</li>
<li>
<a href="group__grpReg.htm">IO Registers</a>
</li>
<li>
<a href="group__grpRegAlt.htm">IO Alternates</a>
</li>
</ul>
</li>
<li>
<a href="group__grpAudio.htm">Sound</a>
</li>
<li>
<a href="group__grpTTE.htm">Tonc Text Engine</a>
<ul>
<li>
<a href="group__grpTTEOps.htm">Operations</a>
</li>
<li>
<a href="group__grpTTEAttr.htm">Attributes</a>
</li>
<li>
<a href="group__grpTTEConio.htm">Console IO</a>
</li>
<li>
<a href="group__grpTTEMap.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTTEChr4c.htm">Character text, column-major</a>
</li>
<li>
<a href="group__grpTTEChr4r.htm">Character text, row-major</a>
</li>
<li>
<a href="group__grpTTEBmp.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTTEObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpText.htm">Old Text</a>
<ul>
<li>
<a href="group__grpTextTile.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTextBm.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTextObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTimer.htm">Timer</a>
</li>
<li>
<a href="group__grpVideo.htm">Video</a>
<ul>
<li>
<a href="group__grpSurface.htm">Surface functions</a>
<ul>
<li>
<a href="group__grpSbmp16.htm">16bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSbmp8.htm">8bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSchr4c.htm">4bpp tiled surfaces, column major</a>
</li>
<li>
<a href="group__grpSchr4r.htm">4bpp tiled surfaces, row major</a>
</li>
</ul>
</li>
<li>
<a href="group__grpVideoPal.htm">Colors</a>
</li>
<li>
<a href="group__grpVideoBg.htm">Tiled Backgrounds</a>
</li>
<li>
<a href="group__grpVideoBmp.htm">Bitmaps</a>
</li>
<li>
<a href="group__grpVideoObj.htm">Objects</a>
</li>
<li>
<a href="group__grpVideoAffine.htm">Affine functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTypes.htm">Types and attributes</a>
<ul>
<li>
<a href="group__grpTypeAttr.htm">Type attributes</a>
</li>
<li>
<a href="group__grpTypePrim.htm">Primary types</a>
</li>
<li>
<a href="group__grpTypeSec.htm">Secondary types</a>
</li>
<li>
<a href="group__grpTypeTert.htm">Tertiary types</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="annotated.htm">Data Structures</a>
<ul>
<li>
<a href="structBG__POINT.htm">BG_POINT</a>
</li>
<li>
<a href="structBgAffineDest.htm">BgAffineDest</a>
</li>
<li>
<a href="structBgAffineSource.htm">BgAffineSource</a>
</li>
<li>
<a href="structBLOCK.htm">BLOCK</a>
</li>
<li>
<a href="structBUP.htm">BUP</a>
</li>
<li>
<a href="structDMA__REC.htm">DMA_REC</a>
</li>
<li>
<a href="structIRQ__REC.htm">IRQ_REC</a>
</li>
<li>
<a href="structIRQ__SENDER.htm">IRQ_SENDER</a>
</li>
<li>
<a href="structMultiBootParam.htm">MultiBootParam</a>
</li>
<li>
<a href="structOBJ__AFFINE.htm">OBJ_AFFINE</a>
</li>
<li>
<a href="structOBJ__ATTR.htm">OBJ_ATTR</a>
</li>
<li>
<a href="structObjAffineDest.htm">ObjAffineDest</a>
</li>
<li>
<a href="structObjAffineSource.htm">ObjAffineSource</a>
</li>
<li>
<a href="structPOINT32.htm">POINT32</a>
</li>
<li>
<a href="structRECT32.htm">RECT32</a>
</li>
<li>
<a href="structREPEAT__REC.htm">REPEAT_REC</a>
</li>
<li>
<a href="structTFont.htm">TFont</a>
</li>
<li>
<a href="structTILE.htm">TILE</a>
</li>
<li>
<a href="structTILE8.htm">TILE8</a>
</li>
<li>
<a href="structTMR__REC.htm">TMR_REC</a>
</li>
<li>
<a href="structTTC.htm">TTC</a>
</li>
<li>
<a href="structVECTOR.htm">VECTOR</a>
</li>
</ul>
</li>
<li>
<a href="functions.htm">Data Fields</a>
</li>
<li>
<a href="files.htm">File List</a>
<ul>
<li>
<a href="ase__drawg_8c.htm">ase_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg_8c.htm">bmp16_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg__b1cs_8c.htm">bmp16_drawg_b1cs.c</a>
</li>
<li>
<a href="bmp8__drawg_8c.htm">bmp8_drawg.c</a>
</li>
<li>
<a href="bmp8__drawg__b1cs_8c.htm">bmp8_drawg_b1cs.c</a>
</li>
<li>
<a href="chr4c__drawg__b1cts_8c.htm">chr4c_drawg_b1cts.c</a>
</li>
<li>
<a href="chr4c__drawg__b4cts_8c.htm">chr4c_drawg_b4cts.c</a>
</li>
<li>
<a href="chr4r__drawg__b1cts_8c.htm">chr4r_drawg_b1cts.c</a>
</li>
<li>
<a href="obj__drawg_8c.htm">obj_drawg.c</a>
</li>
<li>
<a href="se__drawg_8c.htm">se_drawg.c</a>
</li>
<li>
<a href="tonc_8h.htm">tonc.h</a>
</li>
<li>
<a href="tonc__bg_8c.htm">tonc_bg.c</a>
</li>
<li>
<a href="tonc__bg__affine_8c.htm">tonc_bg_affine.c</a>
</li>
<li>
<a href="tonc__bios_8h.htm">tonc_bios.h</a>
</li>
<li>
<a href="tonc__bmp16_8c.htm">tonc_bmp16.c</a>
</li>
<li>
<a href="tonc__bmp8_8c.htm">tonc_bmp8.c</a>
</li>
<li>
<a href="tonc__color_8c.htm">tonc_color.c</a>
</li>
<li>
<a href="tonc__core_8c.htm">tonc_core.c</a>
</li>
<li>
<a href="tonc__core_8h.htm">tonc_core.h</a>
</li>
<li>
<a href="tonc__input_8c.htm">tonc_input.c</a>
</li>
<li>
<a href="tonc__input_8h.htm">tonc_input.h</a>
</li>
<li>
<a href="tonc__irq_8c.htm">tonc_irq.c</a>
</li>
<li>
<a href="tonc__irq_8h.htm">tonc_irq.h</a>
</li>
<li>
<a href="tonc__legacy_8h.htm">tonc_legacy.h</a>
</li>
<li>
<a href="tonc__libgba_8h.htm">tonc_libgba.h</a>
</li>
<li>
<a href="tonc__math_8c.htm">tonc_math.c</a>
</li>
<li>
<a href="tonc__math_8h.htm">tonc_math.h</a>
</li>
<li>
<a href="tonc__memdef_8h.htm">tonc_memdef.h</a>
</li>
<li>
<a href="tonc__memmap_8h.htm">tonc_memmap.h</a>
</li>
<li>
<a href="tonc__nocash_8h.htm">tonc_nocash.h</a>
</li>
<li>
<a href="tonc__oam_8c.htm">tonc_oam.c</a>
</li>
<li>
<a href="tonc__oam_8h.htm">tonc_oam.h</a>
</li>
<li>
<a href="tonc__obj__affine_8c.htm">tonc_obj_affine.c</a>
</li>
<li>
<a href="tonc__sbmp16_8c.htm">tonc_sbmp16.c</a>
</li>
<li>
<a href="tonc__sbmp8_8c.htm">tonc_sbmp8.c</a>
</li>
<li>
<a href="tonc__schr4c_8c.htm">tonc_schr4c.c</a>
</li>
<li>
<a href="tonc__schr4r_8c.htm">tonc_schr4r.c</a>
</li>
<li>
<a href="tonc__surface_8c.htm">tonc_surface.c</a>
</li>
<li>
<a href="tonc__surface_8h.htm">tonc_surface.h</a>
</li>
<li>
<a href="tonc__text_8h.htm">tonc_text.h</a>
</li>
<li>
<a href="tonc__tte_8h.htm">tonc_tte.h</a>
</li>
<li>
<a href="tonc__types_8h.htm">tonc_types.h</a>
</li>
<li>
<a href="tonc__video_8c.htm">tonc_video.c</a>
</li>
<li>
<a href="tonc__video_8h.htm">tonc_video.h</a>
</li>
<li>
<a href="tte__init__ase_8c.htm">tte_init_ase.c</a>
</li>
<li>
<a href="tte__init__bmp_8c.htm">tte_init_bmp.c</a>
</li>
<li>
<a href="tte__init__chr4c_8c.htm">tte_init_chr4c.c</a>
</li>
<li>
<a href="tte__init__chr4r_8c.htm">tte_init_chr4r.c</a>
</li>
<li>
<a href="tte__init__obj_8c.htm">tte_init_obj.c</a>
</li>
<li>
<a href="tte__init__se_8c.htm">tte_init_se.c</a>
</li>
<li>
<a href="tte__iohook_8c.htm">tte_iohook.c</a>
</li>
<li>
<a href="tte__main_8c.htm">tte_main.c</a>
</li>
</ul>
</li>
<li>
<a href="globals.htm">Globals</a>
</li>
<li>
<a href="pages.htm">Related Pages</a>
<ul>
<li>
<a href="todo.htm">Todo List</a>
</li>
<li>
<a href="deprecated.htm">Deprecated List</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
 </nav>


<section>
<header class="major">
<h2>Get in touch</h2>
</header>
<p>Submit feedback about this site to:</p>
<ul class="contact">
<li class="fa-envelope-o"><a href="https://documentation.help/cdn-cgi/l/email-protection#b4dcd1d8c4d0dbd7c7f4c6d1dcd9d5dada9ad7db"><span class="__cf_email__" data-cfemail="056d606975616a66764577606d68646b6b2b666a">[email&#160;protected]</span></a></li>
</ul>
</section>

<footer id="footer">
<p class="copyright">&copy; <a href="https://documentation.help">documentation.help</a>. Design: <a href="https://rehmann.co">rehmann.co</a>.</p>
<ul class="icons">

</ul>
</footer>
</div>
</div>
</div>

<script data-cfasync="false" src="../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="../assets/js/jquery.min.js" type="54857c8ddc4f69b8b5ba2f8a-text/javascript"></script>
<script src="../assets/js/skel.min.js" type="54857c8ddc4f69b8b5ba2f8a-text/javascript"></script>
<script src="../assets/js/util.js" type="54857c8ddc4f69b8b5ba2f8a-text/javascript"></script>
<!--[if lte IE 8]><script src="assets/js/ie/respond.min.js"></script><![endif]-->
<script src="../assets/js/main.js" type="54857c8ddc4f69b8b5ba2f8a-text/javascript"></script>
<script src="https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js" data-cf-settings="54857c8ddc4f69b8b5ba2f8a-|49" defer=""></script></body>
</html>
