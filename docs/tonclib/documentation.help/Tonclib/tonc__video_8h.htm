<!DOCTYPE HTML>
<html>
<head>
<title>
libtonc: tonc_video.h File Reference - Tonclib Documentation</title>
<script src="../cdn-cgi/apps/head/MjlXTyhGypAwQFkqZX2sOa_9i4o.js"></script><link rel="alternate" href="documentation.pdf" /><link href="page_styles.css.html" rel="stylesheet" type="text/css" />
<link href="../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!--[if lte IE 8]><script src="assets/js/ie/html5shiv.js"></script><![endif]-->
<link rel="stylesheet" href="../assets/css/main.css" />
<link rel="shortcut icon" href="../favicon.ico">
<!--[if lte IE 9]><link rel="stylesheet" href="assets/css/ie9.css" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" href="assets/css/ie8.css" /><![endif]-->
<style>
.collapse > a{
  background: #cdf;
  cursor: pointer;
  display: block;
}
.collapse:focus{
  outline: none;
}
.collapse > div{
  display: none;
}
.collapse:focus div{
  display: block; 
}
</style>
</head>
<body>

<div id="wrapper">

<div id="main">
<div class="inner">

<header id="header">
<a href="https://documentation.help/" class="logo"><strong>documentation</strong>.HELP!</a> Tonclib Documentation </header>

<section>
<h1>libtonc: tonc_video.h File Reference</h1>
<h4>Tonclib</h4>
<div class="content">
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="b50ce1b3db4944bbf5e4fb8f-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="b50ce1b3db4944bbf5e4fb8f-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<div><div class="calibreMain">
<div class="calibreEbookContent">
<div class="calibreEbNavTop">
<a href="tonc__video_8c.htm" class="calibreAPrev">previous page</a>
<a href="tte__init__ase_8c.htm" class="calibreANext"> next page</a>
</div>

<div class="tabs">
<ul class="calibre1">
<li class="current"><a href="main.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Main Page</span></a></li>
<li class="current"><a href="modules.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Modules</span></a></li>
<li class="current"><a href="classes.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Data Structures</span></a></li>
<li class="current"><a href="files.htm" class="pcalibre pcalibre3 pcalibre1 pcalibre2 calibre2"><span class="pcalibre4 calibre3">Files</span></a></li>
<li class="current"><a href="pages.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Related Pages</span></a></li>
</ul>
</div>
<h1 class="calibre6">tonc_video.h File Reference</h1><code class="calibre29">#include "<a class="pcalibre5 el pcalibre6" href="tonc__memmap_8h.htm">tonc_memmap.h</a>"</code>
<code class="calibre29">#include "<a class="pcalibre5 el pcalibre6" href="tonc__memdef_8h.htm">tonc_memdef.h</a>"</code><br class="calibre21" />
<code class="calibre29">#include "<a class="pcalibre5 el pcalibre6" href="tonc__core_8h.htm">tonc_core.h</a>"</code><br class="calibre21" />
<table border="0" cellpadding="0" cellspacing="0" class="calibre17">
<tr class="calibre18"><td class="calibre19" /></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">mode 3</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb32022201fe4e71f71c3eb2141b20288"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gb32022201fe4e71f71c3eb2141b20288">M3_CLEAR</a>()   memset32(vid_mem, 0, M3_SIZE/4)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the mode 3 background with color <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g60b393e5ec3a479e4f49f3d7e467620d"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g60b393e5ec3a479e4f49f3d7e467620d">m3_fill</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the mode 3 background with color <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gde04ccf3d0c909d73ceb434f37cd284c"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gde04ccf3d0c909d73ceb434f37cd284c">m3_plot</a> (int x, int y, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a single <em class="calibre27">clr</em> colored pixel in mode 3 at (<em class="calibre27">x</em>, <em class="calibre27">y</em>). <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge5f1567c5ed86dbde54ecd8d5bef2bcb"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#ge5f1567c5ed86dbde54ecd8d5bef2bcb">m3_hline</a> (int x1, int y, int x2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored horizontal line in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ga90a979e39329100b908c635240328d5"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#ga90a979e39329100b908c635240328d5">m3_vline</a> (int x, int y1, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored vertical line in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge40aa2ce6386e3b4299e9addf04c8d59"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#ge40aa2ce6386e3b4299e9addf04c8d59">m3_line</a> (int x1, int y1, int x2, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored line in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gc46558ed56d076f7eab4f2b0a5eef9a9">m3_rect</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored rectangle in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g899d97e12bf27098820aef66f30a705d">m3_frame</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored frame in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">mode 4</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g032da18649545b356e4e10a50f4269a4"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g032da18649545b356e4e10a50f4269a4">M4_CLEAR</a>()   memset32(vid_page, 0, M4_SIZE/4)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 4 backbuffer with <em class="calibre27">clrid</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g477b82b027d5cbc4fe68e2e27ab05114"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g477b82b027d5cbc4fe68e2e27ab05114">m4_fill</a> (u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 4 backbuffer with <em class="calibre27">clrid</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="geb8d1d193eedfc8b25e399f6e819b757"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#geb8d1d193eedfc8b25e399f6e819b757">m4_plot</a> (int x, int y, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a <em class="calibre27">clrid</em> pixel on the current mode 4 backbuffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g3add96f9e336cd6bf7b427394f5fe47c"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g3add96f9e336cd6bf7b427394f5fe47c">m4_hline</a> (int x1, int y, int x2, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored horizontal line in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gf6dd74e42bed07c3ba950bf5c76c8c2c"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gf6dd74e42bed07c3ba950bf5c76c8c2c">m4_vline</a> (int x, int y1, int y2, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored vertical line in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g5b4e7099816a0872428d20cb7fe867c7"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g5b4e7099816a0872428d20cb7fe867c7">m4_line</a> (int x1, int y1, int x2, int y2, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored line in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gbe1a920149562e4a6353c9debc70ee0a">m4_rect</a> (int left, int top, int right, int bottom, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored rectangle in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g886b07b1a849ad3703617be534f455e0">m4_frame</a> (int left, int top, int right, int bottom, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored frame in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">mode 5</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gf82552c50f000d5b792092ef4efd6bb1"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gf82552c50f000d5b792092ef4efd6bb1">M5_CLEAR</a>()   memset32(vid_page, 0, M5_SIZE/4)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 5 backbuffer with <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g28bbf0b65a01cfc5c6ca6ccd97ce3167"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g28bbf0b65a01cfc5c6ca6ccd97ce3167">m5_fill</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 5 backbuffer with <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g8c8c523c84a223cdf6a0301fab618139"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g8c8c523c84a223cdf6a0301fab618139">m5_plot</a> (int x, int y, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a <em class="calibre27">clrid</em> pixel on the current mode 5 backbuffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g352e00838f9adc0e34ba27349506e1c7"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g352e00838f9adc0e34ba27349506e1c7">m5_hline</a> (int x1, int y, int x2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored horizontal line in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g9db7502872450dbb228f1df9979401ff"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g9db7502872450dbb228f1df9979401ff">m5_vline</a> (int x, int y1, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored vertical line in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g8da07c6e9f26b246f12743f36e83d4bd"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g8da07c6e9f26b246f12743f36e83d4bd">m5_line</a> (int x1, int y1, int x2, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored line in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gf0b6c26a460d4aa40f2dc1f7494aaa58">m5_rect</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored rectangle in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g7e01022ced41e3636616457a60920d0d">m5_frame</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored frame in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Defines</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="2cd109632a6dcccaa80b43561b1ab700"></a>
#define </td><td class="memitemright"><b class="calibre22">SCREEN_WIDTH</b>   240</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="6974d08a74da681b3957b2fead2608b8"></a>
#define </td><td class="memitemright"><b class="calibre22">SCREEN_HEIGHT</b>   160</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="66d727a5d88fe3ef40d2f14086573420"></a>
#define </td><td class="memitemright"><b class="calibre22">M3_WIDTH</b>   SCREEN_WIDTH</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="a782c5c6e7a504e773bdea4f40485f3f"></a>
#define </td><td class="memitemright"><b class="calibre22">M3_HEIGHT</b>   SCREEN_HEIGHT</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="e41054315237a878d26323e64693a386"></a>
#define </td><td class="memitemright"><b class="calibre22">M4_WIDTH</b>   SCREEN_WIDTH</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="91e72c3051ba05c3aa99292d348a0359"></a>
#define </td><td class="memitemright"><b class="calibre22">M4_HEIGHT</b>   SCREEN_HEIGHT</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="0063f56af14f04ec70597d9c16489d69"></a>
#define </td><td class="memitemright"><b class="calibre22">M5_WIDTH</b>   160</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="7109298e3674e3a61a4901a4293e9949"></a>
#define </td><td class="memitemright"><b class="calibre22">M5_HEIGHT</b>   128</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="6cebcf300838de1d13134fa429412678"></a>
#define </td><td class="memitemright"><b class="calibre22">SCREEN_WIDTH_T</b>   (SCREEN_WIDTH/8)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="2a866ff5838ceb3482fdebae2d965551"></a>
#define </td><td class="memitemright"><b class="calibre22">SCREEN_HEIGHT_T</b>   (SCREEN_HEIGHT/8)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="a15b9a2eaaa860e3768ad5d0c0039fea"></a>
#define </td><td class="memitemright"><b class="calibre22">SCREEN_LINES</b>   228</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="800e692b98ec3f4cc0679e934485ca84"></a>
#define </td><td class="memitemright"><b class="calibre22">SCR_W</b>   SCREEN_WIDTH</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="61b2e5ac0d21f66c13855ee70a1a507d"></a>
#define </td><td class="memitemright"><b class="calibre22">SCR_H</b>   SCREEN_HEIGHT</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="75991b9c74e69cce430391ef33656897"></a>
#define </td><td class="memitemright"><b class="calibre22">SCR_WT</b>   SCREEN_WIDTH_T</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ade9482a4f2a1c448c89a7ae1f900e02"></a>
#define </td><td class="memitemright"><b class="calibre22">SCR_HT</b>   SCREEN_HEIGHT_T</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="88837cd1568ac32fd1d81fa304cf0c68"></a>
#define </td><td class="memitemright"><b class="calibre22">LAYER_BG0</b>   0x0001</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="03db8f61af46c3dad07c27597f7f52f3"></a>
#define </td><td class="memitemright"><b class="calibre22">LAYER_BG1</b>   0x0002</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="4491b560e6f9decf7efa9c0b23906ec2"></a>
#define </td><td class="memitemright"><b class="calibre22">LAYER_BG2</b>   0x0004</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="2791a83fd98eb211a254edce8db2a7f0"></a>
#define </td><td class="memitemright"><b class="calibre22">LAYER_BG3</b>   0x0008</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="900967011f520c45c1cba018d929baa0"></a>
#define </td><td class="memitemright"><b class="calibre22">LAYER_OBJ</b>   0x0010</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="d44331f50c3e29fab14fbd006ea58047"></a>
#define </td><td class="memitemright"><b class="calibre22">LAYER_BD</b>   0x0020</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1cc61572d62f74585bfdf6ec038af041"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_MASK</b>   0x001F</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1b394b0c196526901408e0f66c1a3f52"></a>
#define </td><td class="memitemright"><b class="calibre22">RED_MASK</b>   0x001F</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1f56c90039a775d1a6ee1085bd4646be"></a>
#define </td><td class="memitemright"><b class="calibre22">RED_SHIFT</b>   0</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gaf1828eb85c4617f40c94551003aa9b3"></a>
#define </td><td class="memitemright"><b class="calibre22">GREEN_MASK</b>   0x03E0</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g84b09bd025a320fb8475c64410538a39"></a>
#define </td><td class="memitemright"><b class="calibre22">GREEN_SHIFT</b>   5</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g6ee3adbddfaf7aaebeb84e2578c67f02"></a>
#define </td><td class="memitemright"><b class="calibre22">BLUE_MASK</b>   0x7C00</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g4833e2c7f790a980087a0075bf2bc8e3"></a>
#define </td><td class="memitemright"><b class="calibre22">BLUE_SHIFT</b>   10</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#ge86fe3f21840826bf0272cfebea463ba">CBB_CLEAR</a>(cbb)   memset32(&amp;tile_mem[cbb], 0, CBB_SIZE/4)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g149fad2d117fc826b8caf2b55682f3b2"></a>
#define </td><td class="memitemright"><b class="calibre22">SBB_CLEAR</b>(sbb)   memset32(&amp;se_mem[sbb], 0, SBB_SIZE/4)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0121a2be09e3d8656630269fc59f8cf7"></a>
#define </td><td class="memitemright"><b class="calibre22">SBB_CLEAR_ROW</b>(sbb, row)   memset32(&amp;se_mem[sbb][(row)*32], 0, 32/2)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g2b097ef6836bcc9d5f1c004a8b983e2d"></a>
#define </td><td class="memitemright"><b class="calibre22">__BG_TYPES</b>   ((0x0C7F&lt;&lt;16)|(0x0C40))</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g14d94be9e15340500f8a67b65e55c008"></a>
#define </td><td class="memitemright"><b class="calibre22">BG_IS_AFFINE</b>(n)   ( (__BG_TYPES&gt;&gt;(4*(REG_DISPCNT&amp;7)+(n) ))&amp;1 )</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g18124b9b295ef6ec10bc63a83b17b8c7"></a>
#define </td><td class="memitemright"><b class="calibre22">BG_IS_AVAIL</b>(n)   ( (__BG_TYPES&gt;&gt;(4*(REG_DISPCNT&amp;7)+(n)+16))&amp;1 )</td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">Base Color constants</div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd8fc23ac0b5f8e6292135c5647486d5a"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_BLACK</b>   0x0000</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g440726f8973da46eba779f170566b4cc"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_RED</b>   0x001F</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g05b480d1cbcc1faeaa4eaca7b96b1e18"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_LIME</b>   0x03E0</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge0a5a80f5e963a782350b12e9cfcc9f3"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_YELLOW</b>   0x03FF</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0dab0df401c468a1012750cc6331dbe4"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_BLUE</b>   0x7C00</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gbe704e11e12fa967b28d74a59c96a2eb"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_MAG</b>   0x7C1F</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g59d8c7d9960773718d8dac44a99bcac4"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_CYAN</b>   0x7FE0</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g200fd50f64e8a7777954547ef30798a1"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_WHITE</b>   0x7FFF</td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">Additional colors</div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1b256f496064af7eda4a05f7cd3ebaf7"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_DEAD</b>   0xDEAD</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g38b77530b62dea51ef1896895f0d5ee2"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_MAROON</b>   0x0010</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0c8c42824dd44b52d4289558804a128a"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_GREEN</b>   0x0200</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g278a76cfa3352b6f4dac36269696d638"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_OLIVE</b>   0x0210</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g82bbec903d4fb5d640e1730763a59427"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_ORANGE</b>   0x021F</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g891483672b9c0b4c5846e24b41126999"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_NAVY</b>   0x4000</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g8d1772ccdca510c055b44c731b3879f1"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_PURPLE</b>   0x4010</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gdefa96b8c79d96bebc64651189003f79"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_TEAL</b>   0x4200</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge6bc9ef7ab884321d5aed99e40b8bfbf"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_GRAY</b>   0x4210</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g7860fdc13fcf2bfa9180e30286507bae"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_MEDGRAY</b>   0x5294</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g2b0e60925eaa43718225418bea9545af"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_SILVER</b>   0x6318</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g71c4db307f2ad8835866b60c6910ac03"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_MONEYGREEN</b>   0x6378</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g240634814ee364892cd60afb1d93e2cd"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_FUCHSIA</b>   0x7C1F</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb659a3955e2c7fb6f39ebff10019e49a"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_SKYBLUE</b>   0x7B34</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g04b59dc8dfeaa58e9eaa18b4c55fcc1b"></a>
#define </td><td class="memitemright"><b class="calibre22">CLR_CREAM</b>   0x7BFF</td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Functions</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="af3f1792c9b191fee05840382c99e9f5"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">vid_vsync</b> (void)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="cb669ce3c4e4c6ee56522466c17273b9"></a>
void </td><td class="memitemright"><b class="calibre22">vid_wait</b> (uint frames)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">u16 * </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="tonc__video_8h.htm#e8e7a1bca8d4b7dcbf383653fe6fbad2">vid_flip</a> (void)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Flip the display page. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#g6a1173e3cf55a4fd06c2687037dbcd20">clr_rotate</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *clrs, uint nclrs, int ror)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Rotate <em class="calibre27">nclrs</em> colors at <em class="calibre27">clrs</em> to the right by <em class="calibre27">ror</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#g9e7378ce447c362a1487889db47fb5e5">clr_blend</a> (const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *srca, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *srcb, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, u32 nclrs, u32 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Blends color arrays <em class="calibre27">srca</em> and <em class="calibre27">srcb</em> into <em class="calibre27">dst</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gf50e0487bf67949105f4ce6c3abb89c1">clr_fade</a> (const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *src, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, u32 nclrs, u32 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fades color arrays <em class="calibre27">srca</em> to <em class="calibre27">clr</em> into <em class="calibre27">dst</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gb933d21c5cf613c8d6461b510cdfbff3">clr_grayscale</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *src, uint nclrs)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Transform colors to grayscale. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#g5abfd414a43c8264fb06b47e3b9b6f4d">clr_rgbscale</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *src, uint nclrs, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Transform colors to an rgb-scale. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gaae06647c762a9ce6672c7f05f701c74">clr_adj_brightness</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *src, uint nclrs, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> bright)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Adjust brightness by <em class="calibre27">bright</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gcf2c1ff25708cdcdb9206028d717643e">clr_adj_contrast</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *src, uint nclrs, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> contrast)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Adjust contrast by <em class="calibre27">contrast</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gdfd67e4e2f56574721738d383fc7cd0e">clr_adj_intensity</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *src, uint nclrs, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> intensity)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Adjust intensity by <em class="calibre27">intensity</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gbb41683d1300a660773a8a01797c2940">pal_gradient</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *pal, int first, int last)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a gradient between pal[first] and pal[last]. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gd95729680f176bfaa061fcf92ea73dd3">pal_gradient_ex</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *pal, int first, int last, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr_first, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr_last)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a gradient between pal[first] and pal[last]. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">IWRAM_CODE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#g27df9c6bb878e8e0bd48a5c1da56cdbc">clr_blend_fast</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *srca, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *srcb, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, uint nclrs, u32 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Blends color arrays <em class="calibre27">srca</em> and <em class="calibre27">srcb</em> into <em class="calibre27">dst</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">IWRAM_CODE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#g33e9a6b8994b3a30646e9e46dabcbb27">clr_fade_fast</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *src, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> *dst, uint nclrs, u32 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fades color arrays <em class="calibre27">srca</em> to <em class="calibre27">clr</em> into <em class="calibre27">dst</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb3d2d769522f79b3f0a6a691b3d365ce"></a>
INLINE <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gb3d2d769522f79b3f0a6a691b3d365ce">RGB15</a> (int red, int green, int blue)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a 15bit BGR color. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g33163cc56f6367961084b5fe2e2b362b"></a>
INLINE <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#g33163cc56f6367961084b5fe2e2b362b">RGB15_SAFE</a> (int red, int green, int blue)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a 15bit BGR color, with proper masking of R,G,B components. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gcd84ef97ad40206c607b41a11a8cde9f"></a>
INLINE <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoPal.htm#gcd84ef97ad40206c607b41a11a8cde9f">RGB8</a> (u8 red, u8 green, u8 blue)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a 15bit BGR color, using 8bit components. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g2125aa4286830ed213dc582e94734d26"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g2125aa4286830ed213dc582e94734d26">se_fill</a> (SCR_ENTRY *sbb, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill screenblock <em class="calibre27">sbb</em> with <em class="calibre27">se</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0d5f23c61d3ff2f8ad513553338c7263"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g0d5f23c61d3ff2f8ad513553338c7263">se_plot</a> (SCR_ENTRY *sbb, int x, int y, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a screen entry at (<em class="calibre27">x</em>,<em class="calibre27">y</em>) of screenblock <em class="calibre27">sbb</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g9510b038adb0e045c4c980f1472a15cd"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g9510b038adb0e045c4c980f1472a15cd">se_rect</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill a rectangle on <em class="calibre27">sbb</em> with <em class="calibre27">se</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g21d0366fa0f3a0a287e1e193f931200a"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g21d0366fa0f3a0a287e1e193f931200a">se_frame</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a border on <em class="calibre27">sbb</em> with <em class="calibre27">se</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g9a4d24635820ee7459e7efa5911067bb">se_window</a> (SCR_ENTRY *sbb, int left, int top, int right, int bottom, SCR_ENTRY se0)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Create a framed rectangle. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g6d3e74fb47545e9c1ca61793aa2b9902"></a>
void </td><td class="memitemright"><b class="calibre22">se_hline</b> (SCR_ENTRY *sbb, int x0, int x1, int y, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge898a823a28b8d9d833ebf6a0ecf6ba8"></a>
void </td><td class="memitemright"><b class="calibre22">se_vline</b> (SCR_ENTRY *sbb, int x, int y0, int y1, SCR_ENTRY se)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g9f93f5138ff3d47d00a044f41bf654c2"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g9f93f5138ff3d47d00a044f41bf654c2">bg_aff_set</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pa, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pb, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pc, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pd)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set the elements of an <em class="calibre27">bg</em> affine matrix. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gfbcf430c4a1845ff048a712f1dd136ab"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gfbcf430c4a1845ff048a712f1dd136ab">bg_aff_identity</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set an bg affine matrix to the identity matrix. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb0a134e7485c7dda4d6ed72d1784247b"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gb0a134e7485c7dda4d6ed72d1784247b">bg_aff_scale</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sx, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sy)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set an bg affine matrix for scaling. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g7bd2527dbe25037d0f35eb56face8010"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">bg_aff_shearx</b> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hx)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g0a0bf192e25e13d578cddeaa03c5fdc3"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">bg_aff_sheary</b> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hy)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g4a79fb8a1941001c5de00c5241453a8d">bg_aff_rotate</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, u16 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg matrix to counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gb0d48ace0799a3c64c30ec38be40b764">bg_aff_rotscale</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, int sx, int sy, u16 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg matrix to 2d scaling, then counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g49bdf87a8a29679abd1ffcaf06ff9abc"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g49bdf87a8a29679abd1ffcaf06ff9abc">bg_aff_premul</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *src)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Pre-multiply <em class="calibre27">dst</em> by <em class="calibre27">src:</em> D = S*D. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gba4d91096bf483cc408ed96419232dcd"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#gba4d91096bf483cc408ed96419232dcd">bg_aff_postmul</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *src)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Post-multiply <em class="calibre27">dst</em> by <em class="calibre27">src:</em> D= D*S. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g783336f60bac5301fbda41b4ab856a04">bg_aff_rotscale2</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, const AFF_SRC *as)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg matrix to 2d scaling, then counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBg.htm#g883bad93b65ed70e331f91b191f67a92">bg_rotscale_ex</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *bgaff, const AFF_SRC_EX *asx)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set bg affine matrix to a rot/scale around an arbitrary point. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="24d736643fc2338da07f03e837abdfa6"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="tonc__video_8h.htm#24d736643fc2338da07f03e837abdfa6">bg_aff_copy</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="group__grpTypeTert.htm#gbd684ef1bcc16437414d6f59f72572ac">BG_AFFINE</a> *src)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Copy bg affine aprameters. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">Generic 8bpp bitmaps</div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g31ba3d4abaf5fce111db405c9080a7d9">bmp8_plot</a> (int x, int y, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a single pixel on a 8-bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g78a065b9b5c888261a0939ef7985524a">bmp8_hline</a> (int x1, int y, int x2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a horizontal line on an 8bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g6417826850eabcf68e344a1cfebc320d">bmp8_vline</a> (int x, int y1, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a vertical line on an 8bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g4fa12303bf6f855c786b3a8634d5e980">bmp8_line</a> (int x1, int y1, int x2, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a line on an 8bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g3194d0a20ffc656a9bbbabcb37f753dc">bmp8_rect</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 8bit mode; internal routine. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g7b92691f76d2f58c62f43668b59d9f20">bmp8_frame</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 8bit mode; internal routine. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><div class="groupheader">Generic 16bpp bitmaps</div></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g3651328de342672aaa6d3c7ed90244ea">bmp16_plot</a> (int x, int y, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a single pixel on a 16-bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g6f825d0c880961a1ba5df6205693572b">bmp16_hline</a> (int x1, int y, int x2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a horizontal line on an 16bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gac05157d6a367ed8eb8ce53221acef94">bmp16_vline</a> (int x, int y1, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a vertical line on an 16bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g5237fea7ce35ef838b00d9bc8cad06ae">bmp16_line</a> (int x1, int y1, int x2, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a line on an 16bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g9f4450f64ce6912c7b91bba87021df0e">bmp16_rect</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 16bit mode; internal routine. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g835a637316d451be14c216e8a1424d3c">bmp16_frame</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 16bit mode; internal routine. <br class="calibre21" /></td></tr>
</table>
<hr class="calibre9" /><a name="_details" class="pcalibre5 pcalibre6 calibre8"></a><h2 class="calibre20">Detailed Description</h2>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Author:</b></dt><dd class="calibre23">J Vijn </dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Date:</b></dt><dd class="calibre23">20060604 - 20080311 </dd></dl>
<hr class="calibre9" /><h2 class="calibre20">Function Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="e8e7a1bca8d4b7dcbf383653fe6fbad2"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">u16* vid_flip </td>
<td class="calibre19">(</td>
<td class="paramtype">void </td>
<td class="paramname"> </td>
<td class="calibre19"> ) </td>
<td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Flip the display page.
</p><p class="calibre7">
Toggles the display page in REG_DISPCNT and sets <em class="calibre27">vid_page</em> to point to the back buffer. <dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Returns:</b></dt><dd class="calibre23">Current back buffer pointer. </dd></dl>
</p></div>
</div><p class="calibre7">
<hr size="1" class="calibre9" /><address class="calibre10"><small class="calibre11">Generated on Mon Aug 25 17:03:56 2008 for libtonc by 
<a href="http://www.doxygen.org/index.html" class="pcalibre5 pcalibre6 calibre8">
<img src="doxygen.png" alt="doxygen" border="0" class="calibre12" /></a> 1.5.3 </small></address>
</p>
</div>
<div class="calibreEbNav">
<a href="tonc__video_8c.htm" class="calibreAPrev">previous page</a>
<a href="index.html" class="calibreAHome"> start</a>
<a href="tte__init__ase_8c.htm" class="calibreANext"> next page</a>
</div>
</div>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="b50ce1b3db4944bbf5e4fb8f-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="b50ce1b3db4944bbf5e4fb8f-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</table>
</div>
</section>

</div>
</div>


<div id="sidebar">
<div class="inner">


<nav id="menu">
<header class="major">
<h2>Menu</h2>
</header>
<ul>
<li><a href="https://documentation.help/">Homepage</a></li> 
</ul>
<div><div class="calibreTocIndex">
<h2> Table of contents</h2>
<div>
<ul>
<li>
<a href="main.htm">Tonclib 1.4 (20080825)</a>
</li>
<li>
<a href="modules.htm">Modules</a>
<ul>
<li>
<a href="group__grpBios.htm">Bios Calls</a>
<ul>
<li>
<a href="group__grpBiosDef.htm">BIOS informalities</a>
</li>
<li>
<a href="group__grpBiosMain.htm">BIOS functions</a>
</li>
<li>
<a href="group__grpBiosEx.htm">More BIOS functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpCore.htm">Core</a>
<ul>
<li>
<a href="group__grpCoreBit.htm">Bit(field) macros</a>
</li>
<li>
<a href="group__grpData.htm">Data routines</a>
</li>
<li>
<a href="group__grpCoreMisc.htm">Miscellaneous routines</a>
</li>
<li>
<a href="group__grpNocash.htm">no$gba debugging</a>
</li>
</ul>
</li>
<li>
<a href="group__grpDma.htm">DMA</a>
</li>
<li>
<a href="group__grpInput.htm">Input</a>
</li>
<li>
<a href="group__grpIrq.htm">Interrupt</a>
</li>
<li>
<a href="group__grpMath.htm">Math</a>
<ul>
<li>
<a href="group__grpMathBase.htm">Base math</a>
</li>
<li>
<a href="group__grpMathFixed.htm">Fixed point math</a>
</li>
<li>
<a href="group__grpMathLut.htm">Look-up tables</a>
</li>
<li>
<a href="group__grpMathPoint.htm">Point functions</a>
</li>
<li>
<a href="group__grpMathVector.htm">Vector functions</a>
</li>
<li>
<a href="group__grpMathRect.htm">Rect functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemmap.htm">Memory Map</a>
<ul>
<li>
<a href="group__grpMemBits.htm">Memory map bit(fields)</a>
<ul>
<li>
<a href="group__grpVideoDCNT.htm">Display Control Flags</a>
</li>
<li>
<a href="group__grpVideoDSTAT.htm">Display Status Flags</a>
</li>
<li>
<a href="group__grpVideoBGCNT.htm">Background Control Flags</a>
</li>
<li>
<a href="group__grpVideoGfx.htm">Graphic effects</a>
</li>
<li>
<a href="group__grpVideoBLD.htm">Blend Flags</a>
</li>
<li>
<a href="group__grpAudioSSW.htm">Tone Generator, Sweep Flags</a>
</li>
<li>
<a href="group__grpAudioSSQR.htm">Tone Generator, Square Flags</a>
</li>
<li>
<a href="group__grpAudioSFREQ.htm">Tone Generator, Frequency Flags</a>
</li>
<li>
<a href="group__grpAudioSDMG.htm">Tone Generator, Control Flags</a>
</li>
<li>
<a href="group__grpAudioSDS.htm">Direct Sound Flags</a>
</li>
<li>
<a href="group__grpAudioSSTAT.htm">Sound Status Flags</a>
</li>
<li>
<a href="group__grpAudioDMA.htm">DMA Control Flags</a>
</li>
<li>
<a href="group__grpTimerTM.htm">Timer Control Flags</a>
</li>
<li>
<a href="group__grpSioCnt.htm">Serial I/O Control</a>
</li>
<li>
<a href="group__grpCommR.htm">Comm control.</a>
</li>
<li>
<a href="group__grpInputKEY.htm">Key Flags</a>
</li>
<li>
<a href="group__grpInputKCNT.htm">Key Control Flags</a>
</li>
<li>
<a href="group__grpIrqIRQ.htm">Interrupt Flags</a>
</li>
<li>
<a href="group__grpMiscWS.htm">Waitstate Control Flags</a>
</li>
<li>
<a href="group__grpVideoSE.htm">Screen-entry Flags</a>
</li>
<li>
<a href="group__grpVideoAttr0.htm">Object Attribute 0 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr1.htm">Object Attribute 1 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr2.htm">Object Attribute 2 Flags</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemArray.htm">Memory mapped arrays</a>
</li>
<li>
<a href="group__grpReg.htm">IO Registers</a>
</li>
<li>
<a href="group__grpRegAlt.htm">IO Alternates</a>
</li>
</ul>
</li>
<li>
<a href="group__grpAudio.htm">Sound</a>
</li>
<li>
<a href="group__grpTTE.htm">Tonc Text Engine</a>
<ul>
<li>
<a href="group__grpTTEOps.htm">Operations</a>
</li>
<li>
<a href="group__grpTTEAttr.htm">Attributes</a>
</li>
<li>
<a href="group__grpTTEConio.htm">Console IO</a>
</li>
<li>
<a href="group__grpTTEMap.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTTEChr4c.htm">Character text, column-major</a>
</li>
<li>
<a href="group__grpTTEChr4r.htm">Character text, row-major</a>
</li>
<li>
<a href="group__grpTTEBmp.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTTEObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpText.htm">Old Text</a>
<ul>
<li>
<a href="group__grpTextTile.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTextBm.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTextObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTimer.htm">Timer</a>
</li>
<li>
<a href="group__grpVideo.htm">Video</a>
<ul>
<li>
<a href="group__grpSurface.htm">Surface functions</a>
<ul>
<li>
<a href="group__grpSbmp16.htm">16bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSbmp8.htm">8bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSchr4c.htm">4bpp tiled surfaces, column major</a>
 </li>
<li>
<a href="group__grpSchr4r.htm">4bpp tiled surfaces, row major</a>
</li>
</ul>
</li>
<li>
<a href="group__grpVideoPal.htm">Colors</a>
</li>
<li>
<a href="group__grpVideoBg.htm">Tiled Backgrounds</a>
</li>
<li>
<a href="group__grpVideoBmp.htm">Bitmaps</a>
</li>
<li>
<a href="group__grpVideoObj.htm">Objects</a>
</li>
<li>
<a href="group__grpVideoAffine.htm">Affine functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTypes.htm">Types and attributes</a>
<ul>
<li>
<a href="group__grpTypeAttr.htm">Type attributes</a>
</li>
<li>
<a href="group__grpTypePrim.htm">Primary types</a>
</li>
<li>
<a href="group__grpTypeSec.htm">Secondary types</a>
</li>
<li>
<a href="group__grpTypeTert.htm">Tertiary types</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="annotated.htm">Data Structures</a>
<ul>
<li>
<a href="structBG__POINT.htm">BG_POINT</a>
</li>
<li>
<a href="structBgAffineDest.htm">BgAffineDest</a>
</li>
<li>
<a href="structBgAffineSource.htm">BgAffineSource</a>
</li>
<li>
<a href="structBLOCK.htm">BLOCK</a>
</li>
<li>
<a href="structBUP.htm">BUP</a>
</li>
<li>
<a href="structDMA__REC.htm">DMA_REC</a>
</li>
<li>
<a href="structIRQ__REC.htm">IRQ_REC</a>
</li>
<li>
<a href="structIRQ__SENDER.htm">IRQ_SENDER</a>
</li>
<li>
<a href="structMultiBootParam.htm">MultiBootParam</a>
</li>
<li>
<a href="structOBJ__AFFINE.htm">OBJ_AFFINE</a>
</li>
<li>
<a href="structOBJ__ATTR.htm">OBJ_ATTR</a>
</li>
<li>
<a href="structObjAffineDest.htm">ObjAffineDest</a>
</li>
<li>
<a href="structObjAffineSource.htm">ObjAffineSource</a>
</li>
<li>
<a href="structPOINT32.htm">POINT32</a>
</li>
<li>
<a href="structRECT32.htm">RECT32</a>
</li>
<li>
<a href="structREPEAT__REC.htm">REPEAT_REC</a>
</li>
<li>
<a href="structTFont.htm">TFont</a>
</li>
<li>
<a href="structTILE.htm">TILE</a>
</li>
<li>
<a href="structTILE8.htm">TILE8</a>
</li>
<li>
<a href="structTMR__REC.htm">TMR_REC</a>
</li>
<li>
<a href="structTTC.htm">TTC</a>
</li>
<li>
<a href="structVECTOR.htm">VECTOR</a>
</li>
</ul>
</li>
<li>
<a href="functions.htm">Data Fields</a>
</li>
<li>
<a href="files.htm">File List</a>
<ul>
<li>
<a href="ase__drawg_8c.htm">ase_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg_8c.htm">bmp16_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg__b1cs_8c.htm">bmp16_drawg_b1cs.c</a>
</li>
<li>
<a href="bmp8__drawg_8c.htm">bmp8_drawg.c</a>
</li>
<li>
<a href="bmp8__drawg__b1cs_8c.htm">bmp8_drawg_b1cs.c</a>
</li>
<li>
<a href="chr4c__drawg__b1cts_8c.htm">chr4c_drawg_b1cts.c</a>
</li>
<li>
<a href="chr4c__drawg__b4cts_8c.htm">chr4c_drawg_b4cts.c</a>
</li>
<li>
<a href="chr4r__drawg__b1cts_8c.htm">chr4r_drawg_b1cts.c</a>
</li>
<li>
<a href="obj__drawg_8c.htm">obj_drawg.c</a>
</li>
<li>
<a href="se__drawg_8c.htm">se_drawg.c</a>
</li>
<li>
<a href="tonc_8h.htm">tonc.h</a>
</li>
<li>
<a href="tonc__bg_8c.htm">tonc_bg.c</a>
</li>
<li>
<a href="tonc__bg__affine_8c.htm">tonc_bg_affine.c</a>
</li>
<li>
<a href="tonc__bios_8h.htm">tonc_bios.h</a>
</li>
<li>
<a href="tonc__bmp16_8c.htm">tonc_bmp16.c</a>
</li>
<li>
<a href="tonc__bmp8_8c.htm">tonc_bmp8.c</a>
</li>
<li>
<a href="tonc__color_8c.htm">tonc_color.c</a>
</li>
<li>
<a href="tonc__core_8c.htm">tonc_core.c</a>
</li>
<li>
<a href="tonc__core_8h.htm">tonc_core.h</a>
</li>
<li>
<a href="tonc__input_8c.htm">tonc_input.c</a>
</li>
<li>
<a href="tonc__input_8h.htm">tonc_input.h</a>
</li>
<li>
<a href="tonc__irq_8c.htm">tonc_irq.c</a>
</li>
<li>
<a href="tonc__irq_8h.htm">tonc_irq.h</a>
</li>
<li>
<a href="tonc__legacy_8h.htm">tonc_legacy.h</a>
</li>
<li>
<a href="tonc__libgba_8h.htm">tonc_libgba.h</a>
</li>
<li>
<a href="tonc__math_8c.htm">tonc_math.c</a>
</li>
<li>
<a href="tonc__math_8h.htm">tonc_math.h</a>
</li>
<li>
<a href="tonc__memdef_8h.htm">tonc_memdef.h</a>
</li>
<li>
<a href="tonc__memmap_8h.htm">tonc_memmap.h</a>
</li>
<li>
<a href="tonc__nocash_8h.htm">tonc_nocash.h</a>
</li>
<li>
<a href="tonc__oam_8c.htm">tonc_oam.c</a>
</li>
<li>
<a href="tonc__oam_8h.htm">tonc_oam.h</a>
</li>
<li>
<a href="tonc__obj__affine_8c.htm">tonc_obj_affine.c</a>
</li>
<li>
<a href="tonc__sbmp16_8c.htm">tonc_sbmp16.c</a>
</li>
<li>
<a href="tonc__sbmp8_8c.htm">tonc_sbmp8.c</a>
</li>
<li>
<a href="tonc__schr4c_8c.htm">tonc_schr4c.c</a>
</li>
<li>
<a href="tonc__schr4r_8c.htm">tonc_schr4r.c</a>
</li>
<li>
<a href="tonc__surface_8c.htm">tonc_surface.c</a>
</li>
<li>
<a href="tonc__surface_8h.htm">tonc_surface.h</a>
</li>
<li>
<a href="tonc__text_8h.htm">tonc_text.h</a>
</li>
<li>
<a href="tonc__tte_8h.htm">tonc_tte.h</a>
</li>
<li>
<a href="tonc__types_8h.htm">tonc_types.h</a>
</li>
<li>
<a href="tonc__video_8c.htm">tonc_video.c</a>
</li>
<li>
<a href="tonc__video_8h.htm">tonc_video.h</a>
</li>
<li>
<a href="tte__init__ase_8c.htm">tte_init_ase.c</a>
</li>
<li>
<a href="tte__init__bmp_8c.htm">tte_init_bmp.c</a>
</li>
<li>
<a href="tte__init__chr4c_8c.htm">tte_init_chr4c.c</a>
</li>
<li>
<a href="tte__init__chr4r_8c.htm">tte_init_chr4r.c</a>
</li>
<li>
<a href="tte__init__obj_8c.htm">tte_init_obj.c</a>
</li>
<li>
<a href="tte__init__se_8c.htm">tte_init_se.c</a>
</li>
<li>
<a href="tte__iohook_8c.htm">tte_iohook.c</a>
</li>
<li>
<a href="tte__main_8c.htm">tte_main.c</a>
</li>
</ul>
</li>
<li>
<a href="globals.htm">Globals</a>
</li>
<li>
<a href="pages.htm">Related Pages</a>
<ul>
<li>
<a href="todo.htm">Todo List</a>
</li>
<li>
<a href="deprecated.htm">Deprecated List</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
</nav>


<section>
<header class="major">
<h2>Get in touch</h2>
</header>
<p>Submit feedback about this site to:</p>
<ul class="contact">
<li class="fa-envelope-o"><a href="https://documentation.help/cdn-cgi/l/email-protection#9af2fff6eafef5f9e9dae8fff2f7fbf4f4b4f9f5"><span class="__cf_email__" data-cfemail="78101d14081c171b0b380a1d1015191616561b17">[email&#160;protected]</span></a></li>
</ul>
</section>

<footer id="footer">
<p class="copyright">&copy; <a href="https://documentation.help">documentation.help</a>. Design: <a href="https://rehmann.co">rehmann.co</a>.</p>
<ul class="icons">

</ul>
</footer>
</div>
</div>
</div>

<script data-cfasync="false" src="../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="../assets/js/jquery.min.js" type="b50ce1b3db4944bbf5e4fb8f-text/javascript"></script>
<script src="../assets/js/skel.min.js" type="b50ce1b3db4944bbf5e4fb8f-text/javascript"></script>
<script src="../assets/js/util.js" type="b50ce1b3db4944bbf5e4fb8f-text/javascript"></script>
<!--[if lte IE 8]><script src="assets/js/ie/respond.min.js"></script><![endif]-->
<script src="../assets/js/main.js" type="b50ce1b3db4944bbf5e4fb8f-text/javascript"></script>
<script src="https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js" data-cf-settings="b50ce1b3db4944bbf5e4fb8f-|49" defer=""></script></body>
</html>
