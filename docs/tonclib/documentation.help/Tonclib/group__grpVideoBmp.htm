<!DOCTYPE HTML>
<html>
<head>
<title>
libtonc: Bitmaps - Tonclib Documentation</title>
<script src="../cdn-cgi/apps/head/MjlXTyhGypAwQFkqZX2sOa_9i4o.js"></script><link rel="alternate" href="documentation.pdf" /><link href="page_styles.css.html" rel="stylesheet" type="text/css" />
<link href="../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!--[if lte IE 8]><script src="assets/js/ie/html5shiv.js"></script><![endif]-->
<link rel="stylesheet" href="../assets/css/main.css" />
<link rel="shortcut icon" href="../favicon.ico">
<!--[if lte IE 9]><link rel="stylesheet" href="assets/css/ie9.css" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" href="assets/css/ie8.css" /><![endif]-->
<style>
.collapse > a{
  background: #cdf;
  cursor: pointer;
  display: block;
}
.collapse:focus{
  outline: none;
}
.collapse > div{
  display: none;
}
.collapse:focus div{
  display: block; 
}
</style>
</head>
<body>

<div id="wrapper">

<div id="main">
<div class="inner">

<header id="header">
<a href="https://documentation.help/" class="logo"><strong>documentation</strong>.HELP!</a> Tonclib Documentation </header>

<section>
<h1>libtonc: Bitmaps</h1>
<h4>Tonclib</h4>
<div class="content">
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="f8f93d3b9a16858e550f75bc-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="f8f93d3b9a16858e550f75bc-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<div><div class="calibreMain">
<div class="calibreEbookContent">
<div class="calibreEbNavTop">
<a href="group__grpVideoBg.htm" class="calibreAPrev">previous page</a>
<a href="group__grpVideoObj.htm" class="calibreANext"> next page</a>
</div>

<div class="tabs">
<ul class="calibre1">
<li class="current"><a href="main.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Main Page</span></a></li>
<li class="current"><a href="modules.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Modules</span></a></li>
<li class="current"><a href="classes.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Data Structures</span></a></li>
<li class="current"><a href="files.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Files</span></a></li>
<li class="current"><a href="pages.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Related Pages</span></a></li>
</ul>
</div>
<h1 class="calibre6">Bitmaps<br class="calibre24" />
<small class="calibre25">
[<a class="el1 pcalibre5 pcalibre6" href="group__grpVideo.htm">Video</a>]</small>
</h1><table border="0" cellpadding="0" cellspacing="0" class="calibre17">
<tr class="calibre18"><td class="calibre19" /></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Generic 8bpp bitmaps</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g31ba3d4abaf5fce111db405c9080a7d9">bmp8_plot</a> (int x, int y, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a single pixel on a 8-bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g78a065b9b5c888261a0939ef7985524a">bmp8_hline</a> (int x1, int y, int x2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a horizontal line on an 8bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g6417826850eabcf68e344a1cfebc320d">bmp8_vline</a> (int x, int y1, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a vertical line on an 8bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g4fa12303bf6f855c786b3a8634d5e980">bmp8_line</a> (int x1, int y1, int x2, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a line on an 8bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g3194d0a20ffc656a9bbbabcb37f753dc">bmp8_rect</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 8bit mode; internal routine. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g7b92691f76d2f58c62f43668b59d9f20">bmp8_frame</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 8bit mode; internal routine. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Generic 16bpp bitmaps</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g3651328de342672aaa6d3c7ed90244ea">bmp16_plot</a> (int x, int y, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a single pixel on a 16-bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g6f825d0c880961a1ba5df6205693572b">bmp16_hline</a> (int x1, int y, int x2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a horizontal line on an 16bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gac05157d6a367ed8eb8ce53221acef94">bmp16_vline</a> (int x, int y1, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a vertical line on an 16bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g5237fea7ce35ef838b00d9bc8cad06ae">bmp16_line</a> (int x1, int y1, int x2, int y2, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a line on an 16bit buffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g9f4450f64ce6912c7b91bba87021df0e">bmp16_rect</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 16bit mode; internal routine. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g835a637316d451be14c216e8a1424d3c">bmp16_frame</a> (int left, int top, int right, int bottom, u32 clr, void *dstBase, uint dstP)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a rectangle in 16bit mode; internal routine. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">mode 3</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g60b393e5ec3a479e4f49f3d7e467620d"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g60b393e5ec3a479e4f49f3d7e467620d">m3_fill</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the mode 3 background with color <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gde04ccf3d0c909d73ceb434f37cd284c"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gde04ccf3d0c909d73ceb434f37cd284c">m3_plot</a> (int x, int y, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a single <em class="calibre27">clr</em> colored pixel in mode 3 at (<em class="calibre27">x</em>, <em class="calibre27">y</em>). <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge5f1567c5ed86dbde54ecd8d5bef2bcb"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#ge5f1567c5ed86dbde54ecd8d5bef2bcb">m3_hline</a> (int x1, int y, int x2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored horizontal line in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ga90a979e39329100b908c635240328d5"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#ga90a979e39329100b908c635240328d5">m3_vline</a> (int x, int y1, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored vertical line in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge40aa2ce6386e3b4299e9addf04c8d59"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#ge40aa2ce6386e3b4299e9addf04c8d59">m3_line</a> (int x1, int y1, int x2, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored line in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gc46558ed56d076f7eab4f2b0a5eef9a9">m3_rect</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored rectangle in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g899d97e12bf27098820aef66f30a705d">m3_frame</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored frame in mode 3. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb32022201fe4e71f71c3eb2141b20288"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gb32022201fe4e71f71c3eb2141b20288">M3_CLEAR</a>()   memset32(vid_mem, 0, M3_SIZE/4)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the mode 3 background with color <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">mode 4</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g477b82b027d5cbc4fe68e2e27ab05114"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g477b82b027d5cbc4fe68e2e27ab05114">m4_fill</a> (u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 4 backbuffer with <em class="calibre27">clrid</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="geb8d1d193eedfc8b25e399f6e819b757"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#geb8d1d193eedfc8b25e399f6e819b757">m4_plot</a> (int x, int y, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a <em class="calibre27">clrid</em> pixel on the current mode 4 backbuffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g3add96f9e336cd6bf7b427394f5fe47c"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g3add96f9e336cd6bf7b427394f5fe47c">m4_hline</a> (int x1, int y, int x2, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored horizontal line in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gf6dd74e42bed07c3ba950bf5c76c8c2c"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gf6dd74e42bed07c3ba950bf5c76c8c2c">m4_vline</a> (int x, int y1, int y2, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored vertical line in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g5b4e7099816a0872428d20cb7fe867c7"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g5b4e7099816a0872428d20cb7fe867c7">m4_line</a> (int x1, int y1, int x2, int y2, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored line in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gbe1a920149562e4a6353c9debc70ee0a">m4_rect</a> (int left, int top, int right, int bottom, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored rectangle in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g886b07b1a849ad3703617be534f455e0">m4_frame</a> (int left, int top, int right, int bottom, u8 clrid)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clrid</em> colored frame in mode 4. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g032da18649545b356e4e10a50f4269a4"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g032da18649545b356e4e10a50f4269a4">M4_CLEAR</a>()   memset32(vid_page, 0, M4_SIZE/4)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 4 backbuffer with <em class="calibre27">clrid</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">mode 5</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g28bbf0b65a01cfc5c6ca6ccd97ce3167"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g28bbf0b65a01cfc5c6ca6ccd97ce3167">m5_fill</a> (<a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 5 backbuffer with <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g8c8c523c84a223cdf6a0301fab618139"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g8c8c523c84a223cdf6a0301fab618139">m5_plot</a> (int x, int y, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Plot a <em class="calibre27">clrid</em> pixel on the current mode 5 backbuffer. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g352e00838f9adc0e34ba27349506e1c7"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g352e00838f9adc0e34ba27349506e1c7">m5_hline</a> (int x1, int y, int x2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored horizontal line in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g9db7502872450dbb228f1df9979401ff"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g9db7502872450dbb228f1df9979401ff">m5_vline</a> (int x, int y1, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored vertical line in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g8da07c6e9f26b246f12743f36e83d4bd"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g8da07c6e9f26b246f12743f36e83d4bd">m5_line</a> (int x1, int y1, int x2, int y2, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored line in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gf0b6c26a460d4aa40f2dc1f7494aaa58">m5_rect</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored rectangle in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#g7e01022ced41e3636616457a60920d0d">m5_frame</a> (int left, int top, int right, int bottom, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> clr)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Draw a <em class="calibre27">clr</em> colored frame in mode 5. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gf82552c50f000d5b792092ef4efd6bb1"></a>
#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoBmp.htm#gf82552c50f000d5b792092ef4efd6bb1">M5_CLEAR</a>()   memset32(vid_page, 0, M5_SIZE/4)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Fill the current mode 5 backbuffer with <em class="calibre27">clr</em>. <br class="calibre21" /></td></tr>
</table>
<hr class="calibre9" /><a name="_details" class="pcalibre5 pcalibre6 calibre8"></a><h2 class="calibre20">Detailed Description</h2>
Basic functions for dealing with bitmapped graphics. <dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22"><a class="pcalibre5 el pcalibre6" href="deprecated.htm#_deprecated000002">Deprecated:</a></b></dt><dd class="calibre23">The bmp8/bmp16 functions have been superceded by the surface functions (sbmp8/sbmp16) for the most part. The former group has been kept mostly for reference purposes. </dd></dl>
<hr class="calibre9" /><h2 class="calibre20">Function Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="g835a637316d451be14c216e8a1424d3c"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp16_frame </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a rectangle in 16bit mode; internal routine.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side of rectangle; </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. <p class="calibre7">
PONDER: RB in- or exclusive? </p></dd></dl>
</p></div>
</div><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g6f825d0c880961a1ba5df6205693572b"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp16_hline </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a horizontal line on an 16bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x1</em> </td><td class="calibre19">First X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y</em> </td><td class="calibre19">Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x2</em> </td><td class="calibre19">Second X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g5237fea7ce35ef838b00d9bc8cad06ae"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp16_line </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a line on an 16bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x1</em> </td><td class="calibre19">First X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y1</em> </td><td class="calibre19">First Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x2</em> </td><td class="calibre19">Second X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y2</em> </td><td class="calibre19">Second Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g3651328de342672aaa6d3c7ed90244ea"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp16_plot </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Plot a single pixel on a 16-bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x</em> </td><td class="calibre19">X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y</em> </td><td class="calibre19">Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Slow as fuck. Inline plotting functionality if possible. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g9f4450f64ce6912c7b91bba87021df0e"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp16_rect </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a rectangle in 16bit mode; internal routine.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side of rectangle; </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="gac05157d6a367ed8eb8ce53221acef94"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp16_vline </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a vertical line on an 16bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x</em> </td><td class="calibre19">X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y1</em> </td><td class="calibre19">First Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y2</em> </td><td class="calibre19">Second Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g7b92691f76d2f58c62f43668b59d9f20"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp8_frame </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a rectangle in 8bit mode; internal routine.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side of rectangle; </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color-index. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. <p class="calibre7">
PONDER: RB in- or exclusive? </p></dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g78a065b9b5c888261a0939ef7985524a"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp8_hline </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a horizontal line on an 8bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x1</em> </td><td class="calibre19">First X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y</em> </td><td class="calibre19">Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x2</em> </td><td class="calibre19">Second X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color index. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g4fa12303bf6f855c786b3a8634d5e980"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp8_line </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a line on an 8bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x1</em> </td><td class="calibre19">First X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y1</em> </td><td class="calibre19">First Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x2</em> </td><td class="calibre19">Second X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y2</em> </td><td class="calibre19">Second Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color index. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g31ba3d4abaf5fce111db405c9080a7d9"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp8_plot </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Plot a single pixel on a 8-bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x</em> </td><td class="calibre19">X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y</em> </td><td class="calibre19">Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Slow as fuck. Inline plotting functionality if possible. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g3194d0a20ffc656a9bbbabcb37f753dc"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp8_rect </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a rectangle in 8bit mode; internal routine.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side of rectangle; </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom side of rectangle. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color-index. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">Canvas pitch in bytes </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g6417826850eabcf68e344a1cfebc320d"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void bmp8_vline </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">x</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y1</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">y2</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u32 </td>
<td class="paramname"> <em class="calibre27">clr</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">void * </td>
<td class="paramname"> <em class="calibre27">dstBase</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">uint </td>
<td class="paramname"> <em class="calibre27">dstP</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a vertical line on an 8bit buffer.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">x</em> </td><td class="calibre19">X-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y1</em> </td><td class="calibre19">First Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">y2</em> </td><td class="calibre19">Second Y-coord. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color index. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstBase</em> </td><td class="calibre19">Canvas pointer (halfword-aligned plz). </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">dstP</em> </td><td class="calibre19">canvas pitch in bytes. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Does normalization, but not bounds checks. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g899d97e12bf27098820aef66f30a705d"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE void m3_frame </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td>
<td class="paramname"> <em class="calibre27">clr</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a <em class="calibre27">clr</em> colored frame in mode 3.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top size, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Normalized, but not clipped. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="gc46558ed56d076f7eab4f2b0a5eef9a9"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE void m3_rect </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td>
<td class="paramname"> <em class="calibre27">clr</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a <em class="calibre27">clr</em> colored rectangle in mode 3.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top size, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Normalized, but not clipped. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g886b07b1a849ad3703617be534f455e0"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE void m4_frame </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u8 </td>
<td class="paramname"> <em class="calibre27">clrid</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a <em class="calibre27">clrid</em> colored frame in mode 4.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top size, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clrid</em> </td><td class="calibre19">color index. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Normalized, but not clipped. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="gbe1a920149562e4a6353c9debc70ee0a"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE void m4_rect </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u8 </td>
<td class="paramname"> <em class="calibre27">clrid</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a <em class="calibre27">clrid</em> colored rectangle in mode 4.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top size, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clrid</em> </td><td class="calibre19">color index. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Normalized, but not clipped. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g7e01022ced41e3636616457a60920d0d"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE void m5_frame </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td>
<td class="paramname"> <em class="calibre27">clr</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a <em class="calibre27">clr</em> colored frame in mode 5.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top size, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Normalized, but not clipped. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="gf0b6c26a460d4aa40f2dc1f7494aaa58"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE void m5_rect </td>
<td class="calibre19">(</td>
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">left</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">top</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">right</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">int </td>
<td class="paramname"> <em class="calibre27">bottom</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g3f7d6a7047d3cc1d04a6a1e10d7fdb00">COLOR</a> </td>
<td class="paramname"> <em class="calibre27">clr</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Draw a <em class="calibre27">clr</em> colored rectangle in mode 5.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">left</em> </td><td class="calibre19">Left side, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">top</em> </td><td class="calibre19">Top size, inclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">right</em> </td><td class="calibre19">Right size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">bottom</em> </td><td class="calibre19">Bottom size, exclusive. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">clr</em> </td><td class="calibre19">Color. </td></tr>
</table>
</dd></dl>
<dl class="calibre7" compact="compact"><dt class="calibre21"><b class="calibre22">Note:</b></dt><dd class="calibre23">Normalized, but not clipped. </dd></dl>
</p></div>
</div></p><p class="calibre7">
<hr size="1" class="calibre9" /><address class="calibre10"><small class="calibre11">Generated on Mon Aug 25 17:03:57 2008 for libtonc by 
<a href="http://www.doxygen.org/index.html" class="pcalibre5 pcalibre6 calibre8">
<img src="doxygen.png" alt="doxygen" border="0" class="calibre12" /></a> 1.5.3 </small></address>
</p>
</div>
<div class="calibreEbNav">
<a href="group__grpVideoBg.htm" class="calibreAPrev">previous page</a>
<a href="index.html" class="calibreAHome"> start</a>
<a href="group__grpVideoObj.htm" class="calibreANext"> next page</a>
</div>
</div>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="f8f93d3b9a16858e550f75bc-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="f8f93d3b9a16858e550f75bc-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</table>
</div>
</section>

</div>
</div>


<div id="sidebar">
<div class="inner">


<nav id="menu">
<header class="major">
<h2>Menu</h2>
</header>
<ul>
<li><a href="https://documentation.help/">Homepage</a></li> 
</ul>
<div><div class="calibreTocIndex">
<h2> Table of contents</h2>
<div>
<ul>
<li>
<a href="main.htm">Tonclib 1.4 (20080825)</a>
</li>
<li>
<a href="modules.htm">Modules</a>
<ul>
<li>
<a href="group__grpBios.htm">Bios Calls</a>
<ul>
<li>
<a href="group__grpBiosDef.htm">BIOS informalities</a>
</li>
<li>
<a href="group__grpBiosMain.htm">BIOS functions</a>
</li>
<li>
<a href="group__grpBiosEx.htm">More BIOS functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpCore.htm">Core</a>
<ul>
<li>
<a href="group__grpCoreBit.htm">Bit(field) macros</a>
</li>
<li>
<a href="group__grpData.htm">Data routines</a>
</li>
<li>
<a href="group__grpCoreMisc.htm">Miscellaneous routines</a>
</li>
<li>
<a href="group__grpNocash.htm">no$gba debugging</a>
</li>
</ul>
</li>
<li>
<a href="group__grpDma.htm">DMA</a>
</li>
<li>
<a href="group__grpInput.htm">Input</a>
</li>
<li>
<a href="group__grpIrq.htm">Interrupt</a>
</li>
<li>
<a href="group__grpMath.htm">Math</a>
<ul>
<li>
<a href="group__grpMathBase.htm">Base math</a>
</li>
<li>
<a href="group__grpMathFixed.htm">Fixed point math</a>
</li>
<li>
<a href="group__grpMathLut.htm">Look-up tables</a>
</li>
<li>
<a href="group__grpMathPoint.htm">Point functions</a>
</li>
<li>
<a href="group__grpMathVector.htm">Vector functions</a>
</li>
<li>
<a href="group__grpMathRect.htm">Rect functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemmap.htm">Memory Map</a>
<ul>
<li>
<a href="group__grpMemBits.htm">Memory map bit(fields)</a>
<ul>
<li>
<a href="group__grpVideoDCNT.htm">Display Control Flags</a>
</li>
<li>
<a href="group__grpVideoDSTAT.htm">Display Status Flags</a>
</li>
<li>
<a href="group__grpVideoBGCNT.htm">Background Control Flags</a>
</li>
<li>
<a href="group__grpVideoGfx.htm">Graphic effects</a>
</li>
<li>
<a href="group__grpVideoBLD.htm">Blend Flags</a>
</li>
<li>
<a href="group__grpAudioSSW.htm">Tone Generator, Sweep Flags</a>
</li>
<li>
<a href="group__grpAudioSSQR.htm">Tone Generator, Square Flags</a>
</li>
<li>
<a href="group__grpAudioSFREQ.htm">Tone Generator, Frequency Flags</a>
</li>
<li>
<a href="group__grpAudioSDMG.htm">Tone Generator, Control Flags</a>
</li>
<li>
<a href="group__grpAudioSDS.htm">Direct Sound Flags</a>
</li>
<li>
<a href="group__grpAudioSSTAT.htm">Sound Status Flags</a>
</li>
<li>
<a href="group__grpAudioDMA.htm">DMA Control Flags</a>
</li>
<li>
<a href="group__grpTimerTM.htm">Timer Control Flags</a>
</li>
<li>
<a href="group__grpSioCnt.htm">Serial I/O Control</a>
</li>
<li>
<a href="group__grpCommR.htm">Comm control.</a>
</li>
<li>
<a href="group__grpInputKEY.htm">Key Flags</a>
</li>
<li>
<a href="group__grpInputKCNT.htm">Key Control Flags</a>
</li>
<li>
<a href="group__grpIrqIRQ.htm">Interrupt Flags</a>
</li>
<li>
<a href="group__grpMiscWS.htm">Waitstate Control Flags</a>
</li>
<li>
<a href="group__grpVideoSE.htm">Screen-entry Flags</a>
</li>
<li>
<a href="group__grpVideoAttr0.htm">Object Attribute 0 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr1.htm">Object Attribute 1 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr2.htm">Object Attribute 2 Flags</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemArray.htm">Memory mapped arrays</a>
</li>
<li>
<a href="group__grpReg.htm">IO Registers</a>
</li>
<li>
<a href="group__grpRegAlt.htm">IO Alternates</a>
</li>
</ul>
</li>
<li>
<a href="group__grpAudio.htm">Sound</a>
</li>
<li>
<a href="group__grpTTE.htm">Tonc Text Engine</a>
<ul>
<li>
<a href="group__grpTTEOps.htm">Operations</a>
</li>
<li>
<a href="group__grpTTEAttr.htm">Attributes</a>
</li>
<li>
<a href="group__grpTTEConio.htm">Console IO</a>
</li>
<li>
<a href="group__grpTTEMap.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTTEChr4c.htm">Character text, column-major</a>
</li>
<li>
<a href="group__grpTTEChr4r.htm">Character text, row-major</a>
</li>
<li>
<a href="group__grpTTEBmp.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTTEObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpText.htm">Old Text</a>
<ul>
<li>
<a href="group__grpTextTile.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTextBm.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTextObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTimer.htm">Timer</a>
</li>
<li>
<a href="group__grpVideo.htm">Video</a>
<ul>
<li>
<a href="group__grpSurface.htm">Surface functions</a>
<ul>
<li>
<a href="group__grpSbmp16.htm">16bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSbmp8.htm">8bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSchr4c.htm">4bpp tiled surfaces, column major</a>
</li>
<li>
<a href="group__grpSchr4r.htm">4bpp tiled surfaces, row major</a>
</li>
</ul>
</li>
<li>
<a href="group__grpVideoPal.htm">Colors</a>
</li>
<li>
<a href="group__grpVideoBg.htm">Tiled Backgrounds</a>
</li>
<li>
<a href="group__grpVideoBmp.htm">Bitmaps</a>
</li>
<li>
<a href="group__grpVideoObj.htm">Objects</a>
</li>
<li>
<a href="group__grpVideoAffine.htm">Affine functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTypes.htm">Types and attributes</a>
<ul>
<li>
<a href="group__grpTypeAttr.htm">Type attributes</a>
</li>
<li>
<a href="group__grpTypePrim.htm">Primary types</a>
</li>
<li>
<a href="group__grpTypeSec.htm">Secondary types</a>
</li>
<li>
<a href="group__grpTypeTert.htm">Tertiary types</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="annotated.htm">Data Structures</a>
<ul>
<li>
<a href="structBG__POINT.htm">BG_POINT</a>
</li>
<li>
<a href="structBgAffineDest.htm">BgAffineDest</a>
</li>
<li>
<a href="structBgAffineSource.htm">BgAffineSource</a>
</li>
<li>
<a href="structBLOCK.htm">BLOCK</a>
</li>
<li>
<a href="structBUP.htm">BUP</a>
</li>
<li>
<a href="structDMA__REC.htm">DMA_REC</a>
</li>
<li>
<a href="structIRQ__REC.htm">IRQ_REC</a>
</li>
<li>
<a href="structIRQ__SENDER.htm">IRQ_SENDER</a>
</li>
<li>
<a href="structMultiBootParam.htm">MultiBootParam</a>
</li>
<li>
<a href="structOBJ__AFFINE.htm">OBJ_AFFINE</a>
</li>
<li>
<a href="structOBJ__ATTR.htm">OBJ_ATTR</a>
</li>
<li>
<a href="structObjAffineDest.htm">ObjAffineDest</a>
</li>
<li>
<a href="structObjAffineSource.htm">ObjAffineSource</a>
</li>
<li>
<a href="structPOINT32.htm">POINT32</a>
</li>
<li>
<a href="structRECT32.htm">RECT32</a>
</li>
<li>
<a href="structREPEAT__REC.htm">REPEAT_REC</a>
</li>
<li>
<a href="structTFont.htm">TFont</a>
</li>
<li>
<a href="structTILE.htm">TILE</a>
</li>
<li>
<a href="structTILE8.htm">TILE8</a>
</li>
<li>
<a href="structTMR__REC.htm">TMR_REC</a>
</li>
<li>
<a href="structTTC.htm">TTC</a>
</li>
<li>
<a href="structVECTOR.htm">VECTOR</a>
</li>
</ul>
</li>
<li>
<a href="functions.htm">Data Fields</a>
</li>
<li>
<a href="files.htm">File List</a>
<ul>
<li>
<a href="ase__drawg_8c.htm">ase_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg_8c.htm">bmp16_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg__b1cs_8c.htm">bmp16_drawg_b1cs.c</a>
</li>
<li>
<a href="bmp8__drawg_8c.htm">bmp8_drawg.c</a>
</li>
<li>
<a href="bmp8__drawg__b1cs_8c.htm">bmp8_drawg_b1cs.c</a>
</li>
<li>
<a href="chr4c__drawg__b1cts_8c.htm">chr4c_drawg_b1cts.c</a>
</li>
<li>
<a href="chr4c__drawg__b4cts_8c.htm">chr4c_drawg_b4cts.c</a>
</li>
<li>
<a href="chr4r__drawg__b1cts_8c.htm">chr4r_drawg_b1cts.c</a>
</li>
<li>
<a href="obj__drawg_8c.htm">obj_drawg.c</a>
</li>
<li>
<a href="se__drawg_8c.htm">se_drawg.c</a>
</li>
<li>
<a href="tonc_8h.htm">tonc.h</a>
</li>
<li>
<a href="tonc__bg_8c.htm">tonc_bg.c</a>
</li>
<li>
<a href="tonc__bg__affine_8c.htm">tonc_bg_affine.c</a>
</li>
<li>
<a href="tonc__bios_8h.htm">tonc_bios.h</a>
</li>
<li>
<a href="tonc__bmp16_8c.htm">tonc_bmp16.c</a>
</li>
<li>
<a href="tonc__bmp8_8c.htm">tonc_bmp8.c</a>
</li>
<li>
<a href="tonc__color_8c.htm">tonc_color.c</a>
</li>
<li>
<a href="tonc__core_8c.htm">tonc_core.c</a>
</li>
<li>
<a href="tonc__core_8h.htm">tonc_core.h</a>
</li>
<li>
<a href="tonc__input_8c.htm">tonc_input.c</a>
</li>
<li>
<a href="tonc__input_8h.htm">tonc_input.h</a>
</li>
<li>
<a href="tonc__irq_8c.htm">tonc_irq.c</a>
</li>
<li>
<a href="tonc__irq_8h.htm">tonc_irq.h</a>
</li>
<li>
<a href="tonc__legacy_8h.htm">tonc_legacy.h</a>
</li>
<li>
<a href="tonc__libgba_8h.htm">tonc_libgba.h</a>
</li>
<li>
<a href="tonc__math_8c.htm">tonc_math.c</a>
</li>
<li>
<a href="tonc__math_8h.htm">tonc_math.h</a>
</li>
<li>
<a href="tonc__memdef_8h.htm">tonc_memdef.h</a>
</li>
<li>
<a href="tonc__memmap_8h.htm">tonc_memmap.h</a>
</li>
<li>
<a href="tonc__nocash_8h.htm">tonc_nocash.h</a>
</li>
<li>
<a href="tonc__oam_8c.htm">tonc_oam.c</a>
</li>
<li>
<a href="tonc__oam_8h.htm">tonc_oam.h</a>
</li>
<li>
<a href="tonc__obj__affine_8c.htm">tonc_obj_affine.c</a>
</li>
<li>
<a href="tonc__sbmp16_8c.htm">tonc_sbmp16.c</a>
</li>
<li>
<a href="tonc__sbmp8_8c.htm">tonc_sbmp8.c</a>
</li>
<li>
<a href="tonc__schr4c_8c.htm">tonc_schr4c.c</a>
</li>
<li>
<a href="tonc__schr4r_8c.htm">tonc_schr4r.c</a>
</li>
<li>
<a href="tonc__surface_8c.htm">tonc_surface.c</a>
</li>
<li>
<a href="tonc__surface_8h.htm">tonc_surface.h</a>
</li>
<li>
<a href="tonc__text_8h.htm">tonc_text.h</a>
</li>
<li>
<a href="tonc__tte_8h.htm">tonc_tte.h</a>
</li>
<li>
<a href="tonc__types_8h.htm">tonc_types.h</a>
</li>
<li>
 <a href="tonc__video_8c.htm">tonc_video.c</a>
</li>
<li>
<a href="tonc__video_8h.htm">tonc_video.h</a>
</li>
<li>
<a href="tte__init__ase_8c.htm">tte_init_ase.c</a>
</li>
<li>
<a href="tte__init__bmp_8c.htm">tte_init_bmp.c</a>
</li>
<li>
<a href="tte__init__chr4c_8c.htm">tte_init_chr4c.c</a>
</li>
<li>
<a href="tte__init__chr4r_8c.htm">tte_init_chr4r.c</a>
</li>
<li>
<a href="tte__init__obj_8c.htm">tte_init_obj.c</a>
</li>
<li>
<a href="tte__init__se_8c.htm">tte_init_se.c</a>
</li>
<li>
<a href="tte__iohook_8c.htm">tte_iohook.c</a>
</li>
<li>
<a href="tte__main_8c.htm">tte_main.c</a>
</li>
</ul>
</li>
<li>
<a href="globals.htm">Globals</a>
</li>
<li>
<a href="pages.htm">Related Pages</a>
<ul>
<li>
<a href="todo.htm">Todo List</a>
</li>
<li>
<a href="deprecated.htm">Deprecated List</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
</nav>


<section>
<header class="major">
<h2>Get in touch</h2>
</header>
<p>Submit feedback about this site to:</p>
<ul class="contact">
<li class="fa-envelope-o"><a href="https://documentation.help/cdn-cgi/l/email-protection#ec8489809c88838f9fac9e8984818d8282c28f83"><span class="__cf_email__" data-cfemail="81e9e4edf1e5eee2f2c1f3e4e9ece0efefafe2ee">[email&#160;protected]</span></a></li>
</ul>
</section>

<footer id="footer">
<p class="copyright">&copy; <a href="https://documentation.help">documentation.help</a>. Design: <a href="https://rehmann.co">rehmann.co</a>.</p>
<ul class="icons">

</ul>
</footer>
</div>
</div>
</div>

<script data-cfasync="false" src="../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="../assets/js/jquery.min.js" type="f8f93d3b9a16858e550f75bc-text/javascript"></script>
<script src="../assets/js/skel.min.js" type="f8f93d3b9a16858e550f75bc-text/javascript"></script>
<script src="../assets/js/util.js" type="f8f93d3b9a16858e550f75bc-text/javascript"></script>
<!--[if lte IE 8]><script src="assets/js/ie/respond.min.js"></script><![endif]-->
<script src="../assets/js/main.js" type="f8f93d3b9a16858e550f75bc-text/javascript"></script>
<script src="https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js" data-cf-settings="f8f93d3b9a16858e550f75bc-|49" defer=""></script></body>
</html>
