<!DOCTYPE HTML>
<html>
<head>
<title>
libtonc: Objects - Tonclib Documentation</title>
<script src="../cdn-cgi/apps/head/MjlXTyhGypAwQFkqZX2sOa_9i4o.js"></script><link rel="alternate" href="documentation.pdf" /><link href="page_styles.css.html" rel="stylesheet" type="text/css" />
<link href="../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!--[if lte IE 8]><script src="assets/js/ie/html5shiv.js"></script><![endif]-->
<link rel="stylesheet" href="../assets/css/main.css" />
<link rel="shortcut icon" href="../favicon.ico">
<!--[if lte IE 9]><link rel="stylesheet" href="assets/css/ie9.css" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" href="assets/css/ie8.css" /><![endif]-->
<style>
.collapse > a{
  background: #cdf;
  cursor: pointer;
  display: block;
}
.collapse:focus{
  outline: none;
}
.collapse > div{
  display: none;
}
.collapse:focus div{
  display: block; 
}
</style>
</head>
<body>

<div id="wrapper">

<div id="main">
<div class="inner">

<header id="header">
<a href="https://documentation.help/" class="logo"><strong>documentation</strong>.HELP!</a> Tonclib Documentation </header>

<section>
<h1>libtonc: Objects</h1>
<h4>Tonclib</h4>
<div class="content">
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="3690fc05c07683361bb8285e-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="3690fc05c07683361bb8285e-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<div><div class="calibreMain">
<div class="calibreEbookContent">
<div class="calibreEbNavTop">
<a href="group__grpVideoBmp.htm" class="calibreAPrev">previous page</a>
<a href="group__grpVideoAffine.htm" class="calibreANext"> next page</a>
</div>

<div class="tabs">
<ul class="calibre1">
<li class="current"><a href="main.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Main Page</span></a></li>
<li class="current"><a href="modules.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Modules</span></a></li>
<li class="current"><a href="classes.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Data Structures</span></a></li>
<li class="current"><a href="files.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Files</span></a></li>
<li class="current"><a href="pages.htm" class="calibre4 pcalibre3 pcalibre1 pcalibre2 pcalibre"><span class="calibre5 pcalibre4">Related Pages</span></a></li>
</ul>
</div>
<h1 class="calibre6">Objects<br class="calibre24" />
<small class="calibre25">
[<a class="el1 pcalibre5 pcalibre6" href="group__grpVideo.htm">Video</a>]</small>
</h1><table border="0" cellpadding="0" cellspacing="0" class="calibre17">
<tr class="calibre18"><td class="calibre19" /></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Defines</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">#define </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g9b4f8915dab23e4832b47bcb65a28d21">OAM_CLEAR</a>()   memset32(oam_mem, 0, OAM_SIZE/4)</td></tr>
<tr class="calibre18"><td colspan="2" class="calibre19"><br class="calibre21" /><h2 class="calibre20">Functions</h2></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g6182ac67d6aa29c635ac4bba1fa325a5"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g6182ac67d6aa29c635ac4bba1fa325a5">oam_init</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, uint count)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Initialize an array of <em class="calibre27">count</em> OBJ_ATTRs with with safe values. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g29e55bb94a10cfea29b972d3fd4c9db9"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g29e55bb94a10cfea29b972d3fd4c9db9">oam_copy</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *dst, const <a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *src, uint count)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Copies <em class="calibre27">count</em> OAM entries from <em class="calibre27">src</em> to <em class="calibre27">dst</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g51c6d393e7c5bc062859d8be93756113"></a>
INLINE <a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> * </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g51c6d393e7c5bc062859d8be93756113">obj_set_attr</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u16 a0, u16 a1, u16 a2)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set the attributes of an object. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gab90a8a38ad5d98cf357317ded9add54"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gab90a8a38ad5d98cf357317ded9add54">obj_set_pos</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, int x, int y)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set the position of <em class="calibre27">obj</em>. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g038b695f3c40e7c88853143c853dbddb"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g038b695f3c40e7c88853143c853dbddb">obj_hide</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Hide an object. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g0fb3d3b3e25e31813c8b9a938148d2c9">obj_unhide</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u16 mode)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Unhide an object. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gbe98121a94d1ef16d2ec491f1a5a8bae"></a>
INLINE const u8 * </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gbe98121a94d1ef16d2ec491f1a5a8bae">obj_get_size</a> (const <a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get object's sizes as a byte array. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gab2576c05e8eb3434c063d0230cf6bb3"></a>
INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gab2576c05e8eb3434c063d0230cf6bb3">obj_get_width</a> (const <a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Get object's width. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gbddaacb6fd1247dc27c60bb4824892eb"></a>
INLINE int </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gbddaacb6fd1247dc27c60bb4824892eb">obj_get_height</a> (const <a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Gets object's height. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb8199880ac37332813c73b79d20e04e5"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gb8199880ac37332813c73b79d20e04e5">obj_copy</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *dst, const <a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *src, uint count)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Copy attributes 0-2 in <em class="calibre27">count</em> OBJ_ATTRs. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gd48ba7c4edda28016e24fce29d045034"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gd48ba7c4edda28016e24fce29d045034">obj_hide_multi</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u32 count)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Hide an array of OBJ_ATTRs. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g2668178e7062320d719699210d6df288"></a>
void </td><td class="memitemright"><b class="calibre22">obj_unhide_multi</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, u16 mode, uint count)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ga6ee3b6244930492792f9931af292d36"></a>
void </td><td class="memitemright"><b class="calibre22">obj_aff_copy</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *src, uint count)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g1d4892b1bf8b86061377cbd4ce0ca409"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g1d4892b1bf8b86061377cbd4ce0ca409">obj_aff_set</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pa, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pb, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pc, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> pd)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set the elements of an <em class="calibre27">object</em> affine matrix. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g46a81c2bdcd764102f692dca7270998b"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g46a81c2bdcd764102f692dca7270998b">obj_aff_identity</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set an object affine matrix to the identity matrix. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="ge324246531d60cc99f356ba7071a7cf9"></a>
INLINE void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#ge324246531d60cc99f356ba7071a7cf9">obj_aff_scale</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sx, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sy)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set an object affine matrix for scaling. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g7c2da38f7806d772b7be3a707d54c4c4"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">obj_aff_shearx</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hx)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gb2cc4f52bf0b7b88acd97824e0516f24"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">obj_aff_sheary</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hy)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g8467b98c70455c369b883833c302a156">obj_aff_rotate</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, u16 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set obj matrix to counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g1324a8f528a2dee81b357c63e6c822bc">obj_aff_rotscale</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sx, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> sy, u16 alpha)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set obj matrix to 2d scaling, then counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gfdc2e9dac960cb679561e1ff4fcc934a"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gfdc2e9dac960cb679561e1ff4fcc934a">obj_aff_premul</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *src)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Pre-multiply <em class="calibre27">dst</em> by <em class="calibre27">src:</em> D = S*D. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g8b30512833f0b99ccd49db914113ce68"></a>
void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g8b30512833f0b99ccd49db914113ce68">obj_aff_postmul</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *dst, const <a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *src)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Post-multiply <em class="calibre27">dst</em> by <em class="calibre27">src:</em> D= D*S. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#gbca7ad22d23b0618adfeea1fac0d71b2">obj_aff_rotscale2</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, const AFF_SRC *as)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Set obj matrix to 2d scaling, then counter-clockwise rotation. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap">void </td><td class="memitemright"><a class="pcalibre5 el pcalibre6" href="group__grpVideoObj.htm#g415d7f22a2a7f144ad50b9cfe64bb162">obj_rotscale_ex</a> (<a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> *obj, <a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oaff, const AFF_SRC_EX *asx)</td></tr>
<tr class="calibre18"><td class="mdescleft"> </td><td class="mdescleft">Rot/scale an object around an arbitrary point. <br class="calibre21" /></td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g99002ed8b528778525fa11a515dada3a"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">obj_aff_scale_inv</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> wx, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> wy)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gf89f5d174aa617b8a48a77f7a5dd73fe"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">obj_aff_rotate_inv</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, u16 theta)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="g501e50c9750d0f2fbf869bc9829ab95c"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">obj_aff_shearx_inv</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hx)</td></tr>
<tr class="calibre18"><td class="memitemleft" nowrap="nowrap"><a class="pcalibre5 pcalibre6 calibre8" name="gcdc7c85ee47064ea99206b0f95fe5650"></a>
INLINE void </td><td class="memitemright"><b class="calibre22">obj_aff_sheary_inv</b> (<a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> *oa, <a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> hy)</td></tr>
</table>
<hr class="calibre9" /><a name="_details" class="pcalibre5 pcalibre6 calibre8"></a><h2 class="calibre20">Detailed Description</h2>
<hr class="calibre9" /><h2 class="calibre20">Define Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="g9b4f8915dab23e4832b47bcb65a28d21"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">#define OAM_CLEAR </td>
<td class="calibre19">(</td>
 
<td class="paramname"> </td>
<td class="calibre19"> ) </td>
<td width="100%" class="calibre19">   memset32(oam_mem, 0, OAM_SIZE/4)</td>
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
</p></div>
</div><p class="calibre7">
<hr class="calibre9" /><h2 class="calibre20">Function Documentation</h2>
<a class="pcalibre5 pcalibre6 calibre8" name="g8467b98c70455c369b883833c302a156"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void obj_aff_rotate </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">oaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u16 </td>
<td class="paramname"> <em class="calibre27">alpha</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Set obj matrix to counter-clockwise rotation.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">oaff</em> </td><td class="calibre19">Object affine struct to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">alpha</em> </td><td class="calibre19">CCW angle. full-circle is 10000h. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g1324a8f528a2dee81b357c63e6c822bc"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void obj_aff_rotscale </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">oaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> </td>
<td class="paramname"> <em class="calibre27">sx</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="group__grpTypeSec.htm#g774d105a82ba25e836aa6b6d78cd1203">FIXED</a> </td>
<td class="paramname"> <em class="calibre27">sy</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u16 </td>
<td class="paramname"> <em class="calibre27">alpha</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Set obj matrix to 2d scaling, then counter-clockwise rotation.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">oaff</em> </td><td class="calibre19">Object affine struct to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">sx</em> </td><td class="calibre19">Horizontal scale (zoom). .8 fixed point. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">sy</em> </td><td class="calibre19">Vertical scale (zoom). .8 fixed point. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">alpha</em> </td><td class="calibre19">CCW angle. full-circle is 10000h. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="gbca7ad22d23b0618adfeea1fac0d71b2"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void obj_aff_rotscale2 </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">oaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">const AFF_SRC * </td>
<td class="paramname"> <em class="calibre27">as</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Set obj matrix to 2d scaling, then counter-clockwise rotation.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">oaff</em> </td><td class="calibre19">Object affine struct to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">as</em> </td><td class="calibre19">Struct with scales and angle. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g415d7f22a2a7f144ad50b9cfe64bb162"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">void obj_rotscale_ex </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> * </td>
<td class="paramname"> <em class="calibre27">obj</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="structOBJ__AFFINE.htm">OBJ_AFFINE</a> * </td>
<td class="paramname"> <em class="calibre27">oaff</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">const AFF_SRC_EX * </td>
<td class="paramname"> <em class="calibre27">asx</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Rot/scale an object around an arbitrary point.
</p><p class="calibre7">
Sets up <em class="calibre27">obj</em> <em class="calibre27">and</em> <em class="calibre27">oaff</em> for rot/scale transformation around an arbitrary point using the <em class="calibre27">asx</em> data. <dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">obj</em> </td><td class="calibre19">Object to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">oaff</em> </td><td class="calibre19">Object affine data to set. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">asx</em> </td><td class="calibre19">Affine source data: screen and texture origins, scales and angle. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<a class="pcalibre5 pcalibre6 calibre8" name="g0fb3d3b3e25e31813c8b9a938148d2c9"></a>
<div class="memitem">
<div class="memproto">
<table class="memname">
<tr class="calibre18">
<td class="memname1">INLINE void obj_unhide </td>
<td class="calibre19">(</td>
<td class="paramtype"><a class="pcalibre5 el pcalibre6" href="structOBJ__ATTR.htm">OBJ_ATTR</a> * </td>
<td class="paramname"> <em class="calibre27">obj</em>, </td>
</tr>
<tr class="calibre18">
<td class="paramkey" />
<td class="calibre19" />
<td class="paramtype">u16 </td>
<td class="paramname"> <em class="calibre27">mode</em></td><td class="calibre19"> </td>
</tr>
<tr class="calibre18">
<td class="calibre19" />
<td class="calibre19">)</td>
<td class="calibre19" /><td class="calibre19" /><td width="100%" class="calibre19" />
</tr>
</table>
</div>
<div class="memdoc">
<p class="calibre7">
Unhide an object.
</p><p class="calibre7">
<dl compact="compact" class="calibre7"><dt class="calibre21"><b class="calibre22">Parameters:</b></dt><dd class="calibre23">
<table border="0" cellspacing="2" cellpadding="0" class="calibre17">
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">obj</em> </td><td class="calibre19">Object to unhide. </td></tr>
<tr class="calibre18"><td class="calibre26" /><td class="calibre26"><em class="calibre27">mode</em> </td><td class="calibre19">Object mode to unhide to. Necessary because this affects the affine-ness of the object. </td></tr>
</table>
</dd></dl>
</p></div>
</div></p><p class="calibre7">
<hr size="1" class="calibre9" /><address class="calibre10"><small class="calibre11">Generated on Mon Aug 25 17:03:57 2008 for libtonc by 
<a href="http://www.doxygen.org/index.html" class="pcalibre5 pcalibre6 calibre8">
<img src="doxygen.png" alt="doxygen" border="0" class="calibre12" /></a> 1.5.3 </small></address>
</p>
</div>
<div class="calibreEbNav">
<a href="group__grpVideoBmp.htm" class="calibreAPrev">previous page</a>
<a href="index.html" class="calibreAHome"> start</a>
<a href="group__grpVideoAffine.htm" class="calibreANext"> next page</a>
</div>
</div>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" type="3690fc05c07683361bb8285e-text/javascript"></script>

<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-0545639743190253" data-ad-slot="2889760833" data-ad-format="auto"></ins>
<script type="3690fc05c07683361bb8285e-text/javascript">
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</table>
</div>
</section>

</div>
</div>


<div id="sidebar">
<div class="inner">


<nav id="menu">
<header class="major">
<h2>Menu</h2>
</header>
<ul>
<li><a href="https://documentation.help/">Homepage</a></li> 
</ul>
<div><div class="calibreTocIndex">
<h2> Table of contents</h2>
<div>
<ul>
<li>
<a href="main.htm">Tonclib 1.4 (20080825)</a>
</li>
<li>
<a href="modules.htm">Modules</a>
<ul>
<li>
<a href="group__grpBios.htm">Bios Calls</a>
<ul>
<li>
<a href="group__grpBiosDef.htm">BIOS informalities</a>
</li>
<li>
<a href="group__grpBiosMain.htm">BIOS functions</a>
</li>
<li>
<a href="group__grpBiosEx.htm">More BIOS functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpCore.htm">Core</a>
<ul>
<li>
<a href="group__grpCoreBit.htm">Bit(field) macros</a>
</li>
<li>
<a href="group__grpData.htm">Data routines</a>
</li>
<li>
<a href="group__grpCoreMisc.htm">Miscellaneous routines</a>
</li>
<li>
<a href="group__grpNocash.htm">no$gba debugging</a>
</li>
</ul>
</li>
<li>
<a href="group__grpDma.htm">DMA</a>
</li>
<li>
<a href="group__grpInput.htm">Input</a>
</li>
<li>
<a href="group__grpIrq.htm">Interrupt</a>
</li>
<li>
<a href="group__grpMath.htm">Math</a>
<ul>
<li>
<a href="group__grpMathBase.htm">Base math</a>
</li>
<li>
<a href="group__grpMathFixed.htm">Fixed point math</a>
</li>
<li>
<a href="group__grpMathLut.htm">Look-up tables</a>
</li>
<li>
<a href="group__grpMathPoint.htm">Point functions</a>
</li>
<li>
<a href="group__grpMathVector.htm">Vector functions</a>
</li>
<li>
<a href="group__grpMathRect.htm">Rect functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemmap.htm">Memory Map</a>
<ul>
<li>
<a href="group__grpMemBits.htm">Memory map bit(fields)</a>
<ul>
<li>
<a href="group__grpVideoDCNT.htm">Display Control Flags</a>
</li>
<li>
<a href="group__grpVideoDSTAT.htm">Display Status Flags</a>
</li>
<li>
<a href="group__grpVideoBGCNT.htm">Background Control Flags</a>
</li>
<li>
<a href="group__grpVideoGfx.htm">Graphic effects</a>
</li>
<li>
<a href="group__grpVideoBLD.htm">Blend Flags</a>
</li>
<li>
<a href="group__grpAudioSSW.htm">Tone Generator, Sweep Flags</a>
</li>
<li>
<a href="group__grpAudioSSQR.htm">Tone Generator, Square Flags</a>
</li>
<li>
<a href="group__grpAudioSFREQ.htm">Tone Generator, Frequency Flags</a>
</li>
<li>
<a href="group__grpAudioSDMG.htm">Tone Generator, Control Flags</a>
</li>
<li>
<a href="group__grpAudioSDS.htm">Direct Sound Flags</a>
</li>
<li>
<a href="group__grpAudioSSTAT.htm">Sound Status Flags</a>
</li>
<li>
<a href="group__grpAudioDMA.htm">DMA Control Flags</a>
</li>
<li>
<a href="group__grpTimerTM.htm">Timer Control Flags</a>
</li>
<li>
<a href="group__grpSioCnt.htm">Serial I/O Control</a>
</li>
<li>
<a href="group__grpCommR.htm">Comm control.</a>
</li>
<li>
<a href="group__grpInputKEY.htm">Key Flags</a>
</li>
 <li>
<a href="group__grpInputKCNT.htm">Key Control Flags</a>
</li>
<li>
<a href="group__grpIrqIRQ.htm">Interrupt Flags</a>
</li>
<li>
<a href="group__grpMiscWS.htm">Waitstate Control Flags</a>
</li>
<li>
<a href="group__grpVideoSE.htm">Screen-entry Flags</a>
</li>
<li>
<a href="group__grpVideoAttr0.htm">Object Attribute 0 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr1.htm">Object Attribute 1 Flags</a>
</li>
<li>
<a href="group__grpVideoAttr2.htm">Object Attribute 2 Flags</a>
</li>
</ul>
</li>
<li>
<a href="group__grpMemArray.htm">Memory mapped arrays</a>
</li>
<li>
<a href="group__grpReg.htm">IO Registers</a>
</li>
<li>
<a href="group__grpRegAlt.htm">IO Alternates</a>
</li>
</ul>
</li>
<li>
<a href="group__grpAudio.htm">Sound</a>
</li>
<li>
<a href="group__grpTTE.htm">Tonc Text Engine</a>
<ul>
<li>
<a href="group__grpTTEOps.htm">Operations</a>
</li>
<li>
<a href="group__grpTTEAttr.htm">Attributes</a>
</li>
<li>
<a href="group__grpTTEConio.htm">Console IO</a>
</li>
<li>
<a href="group__grpTTEMap.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTTEChr4c.htm">Character text, column-major</a>
</li>
<li>
<a href="group__grpTTEChr4r.htm">Character text, row-major</a>
</li>
<li>
<a href="group__grpTTEBmp.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTTEObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpText.htm">Old Text</a>
<ul>
<li>
<a href="group__grpTextTile.htm">Tilemap text</a>
</li>
<li>
<a href="group__grpTextBm.htm">Bitmap text</a>
</li>
<li>
<a href="group__grpTextObj.htm">Object text</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTimer.htm">Timer</a>
</li>
<li>
<a href="group__grpVideo.htm">Video</a>
<ul>
<li>
<a href="group__grpSurface.htm">Surface functions</a>
<ul>
<li>
<a href="group__grpSbmp16.htm">16bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSbmp8.htm">8bpp bitmap surfaces</a>
</li>
<li>
<a href="group__grpSchr4c.htm">4bpp tiled surfaces, column major</a>
</li>
<li>
<a href="group__grpSchr4r.htm">4bpp tiled surfaces, row major</a>
</li>
</ul>
</li>
<li>
<a href="group__grpVideoPal.htm">Colors</a>
</li>
<li>
<a href="group__grpVideoBg.htm">Tiled Backgrounds</a>
</li>
<li>
<a href="group__grpVideoBmp.htm">Bitmaps</a>
</li>
<li>
<a href="group__grpVideoObj.htm">Objects</a>
</li>
<li>
<a href="group__grpVideoAffine.htm">Affine functions</a>
</li>
</ul>
</li>
<li>
<a href="group__grpTypes.htm">Types and attributes</a>
<ul>
<li>
<a href="group__grpTypeAttr.htm">Type attributes</a>
</li>
<li>
<a href="group__grpTypePrim.htm">Primary types</a>
</li>
<li>
<a href="group__grpTypeSec.htm">Secondary types</a>
</li>
<li>
<a href="group__grpTypeTert.htm">Tertiary types</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="annotated.htm">Data Structures</a>
<ul>
<li>
<a href="structBG__POINT.htm">BG_POINT</a>
</li>
<li>
<a href="structBgAffineDest.htm">BgAffineDest</a>
</li>
<li>
<a href="structBgAffineSource.htm">BgAffineSource</a>
</li>
<li>
<a href="structBLOCK.htm">BLOCK</a>
</li>
<li>
<a href="structBUP.htm">BUP</a>
</li>
<li>
<a href="structDMA__REC.htm">DMA_REC</a>
</li>
<li>
<a href="structIRQ__REC.htm">IRQ_REC</a>
</li>
<li>
<a href="structIRQ__SENDER.htm">IRQ_SENDER</a>
</li>
<li>
<a href="structMultiBootParam.htm">MultiBootParam</a>
</li>
<li>
<a href="structOBJ__AFFINE.htm">OBJ_AFFINE</a>
</li>
<li>
<a href="structOBJ__ATTR.htm">OBJ_ATTR</a>
</li>
<li>
<a href="structObjAffineDest.htm">ObjAffineDest</a>
</li>
<li>
<a href="structObjAffineSource.htm">ObjAffineSource</a>
</li>
<li>
<a href="structPOINT32.htm">POINT32</a>
</li>
<li>
<a href="structRECT32.htm">RECT32</a>
</li>
<li>
<a href="structREPEAT__REC.htm">REPEAT_REC</a>
</li>
<li>
<a href="structTFont.htm">TFont</a>
</li>
<li>
<a href="structTILE.htm">TILE</a>
</li>
<li>
<a href="structTILE8.htm">TILE8</a>
</li>
<li>
<a href="structTMR__REC.htm">TMR_REC</a>
</li>
<li>
<a href="structTTC.htm">TTC</a>
</li>
<li>
<a href="structVECTOR.htm">VECTOR</a>
</li>
</ul>
</li>
<li>
<a href="functions.htm">Data Fields</a>
</li>
<li>
<a href="files.htm">File List</a>
<ul>
<li>
<a href="ase__drawg_8c.htm">ase_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg_8c.htm">bmp16_drawg.c</a>
</li>
<li>
<a href="bmp16__drawg__b1cs_8c.htm">bmp16_drawg_b1cs.c</a>
</li>
<li>
<a href="bmp8__drawg_8c.htm">bmp8_drawg.c</a>
</li>
<li>
<a href="bmp8__drawg__b1cs_8c.htm">bmp8_drawg_b1cs.c</a>
</li>
<li>
<a href="chr4c__drawg__b1cts_8c.htm">chr4c_drawg_b1cts.c</a>
</li>
<li>
<a href="chr4c__drawg__b4cts_8c.htm">chr4c_drawg_b4cts.c</a>
</li>
<li>
<a href="chr4r__drawg__b1cts_8c.htm">chr4r_drawg_b1cts.c</a>
</li>
<li>
<a href="obj__drawg_8c.htm">obj_drawg.c</a>
</li>
<li>
<a href="se__drawg_8c.htm">se_drawg.c</a>
</li>
<li>
<a href="tonc_8h.htm">tonc.h</a>
</li>
<li>
<a href="tonc__bg_8c.htm">tonc_bg.c</a>
</li>
<li>
<a href="tonc__bg__affine_8c.htm">tonc_bg_affine.c</a>
</li>
<li>
<a href="tonc__bios_8h.htm">tonc_bios.h</a>
</li>
<li>
<a href="tonc__bmp16_8c.htm">tonc_bmp16.c</a>
</li>
<li>
<a href="tonc__bmp8_8c.htm">tonc_bmp8.c</a>
</li>
<li>
<a href="tonc__color_8c.htm">tonc_color.c</a>
</li>
<li>
<a href="tonc__core_8c.htm">tonc_core.c</a>
</li>
<li>
<a href="tonc__core_8h.htm">tonc_core.h</a>
</li>
<li>
<a href="tonc__input_8c.htm">tonc_input.c</a>
</li>
<li>
<a href="tonc__input_8h.htm">tonc_input.h</a>
</li>
<li>
<a href="tonc__irq_8c.htm">tonc_irq.c</a>
</li>
<li>
<a href="tonc__irq_8h.htm">tonc_irq.h</a>
</li>
<li>
<a href="tonc__legacy_8h.htm">tonc_legacy.h</a>
</li>
<li>
<a href="tonc__libgba_8h.htm">tonc_libgba.h</a>
</li>
<li>
<a href="tonc__math_8c.htm">tonc_math.c</a>
</li>
<li>
<a href="tonc__math_8h.htm">tonc_math.h</a>
</li>
<li>
<a href="tonc__memdef_8h.htm">tonc_memdef.h</a>
</li>
<li>
<a href="tonc__memmap_8h.htm">tonc_memmap.h</a>
</li>
<li>
<a href="tonc__nocash_8h.htm">tonc_nocash.h</a>
</li>
<li>
<a href="tonc__oam_8c.htm">tonc_oam.c</a>
</li>
<li>
<a href="tonc__oam_8h.htm">tonc_oam.h</a>
</li>
<li>
<a href="tonc__obj__affine_8c.htm">tonc_obj_affine.c</a>
</li>
<li>
<a href="tonc__sbmp16_8c.htm">tonc_sbmp16.c</a>
</li>
<li>
<a href="tonc__sbmp8_8c.htm">tonc_sbmp8.c</a>
</li>
<li>
<a href="tonc__schr4c_8c.htm">tonc_schr4c.c</a>
</li>
<li>
<a href="tonc__schr4r_8c.htm">tonc_schr4r.c</a>
</li>
<li>
<a href="tonc__surface_8c.htm">tonc_surface.c</a>
</li>
<li>
<a href="tonc__surface_8h.htm">tonc_surface.h</a>
</li>
<li>
<a href="tonc__text_8h.htm">tonc_text.h</a>
</li>
<li>
<a href="tonc__tte_8h.htm">tonc_tte.h</a>
</li>
<li>
<a href="tonc__types_8h.htm">tonc_types.h</a>
</li>
<li>
<a href="tonc__video_8c.htm">tonc_video.c</a>
</li>
<li>
<a href="tonc__video_8h.htm">tonc_video.h</a>
</li>
<li>
<a href="tte__init__ase_8c.htm">tte_init_ase.c</a>
</li>
<li>
<a href="tte__init__bmp_8c.htm">tte_init_bmp.c</a>
</li>
<li>
<a href="tte__init__chr4c_8c.htm">tte_init_chr4c.c</a>
</li>
<li>
<a href="tte__init__chr4r_8c.htm">tte_init_chr4r.c</a>
</li>
<li>
<a href="tte__init__obj_8c.htm">tte_init_obj.c</a>
</li>
<li>
<a href="tte__init__se_8c.htm">tte_init_se.c</a>
</li>
<li>
<a href="tte__iohook_8c.htm">tte_iohook.c</a>
</li>
<li>
<a href="tte__main_8c.htm">tte_main.c</a>
</li>
</ul>
</li>
<li>
<a href="globals.htm">Globals</a>
</li>
<li>
<a href="pages.htm">Related Pages</a>
<ul>
<li>
<a href="todo.htm">Todo List</a>
</li>
<li>
<a href="deprecated.htm">Deprecated List</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
 </nav>


<section>
<header class="major">
<h2>Get in touch</h2>
</header>
<p>Submit feedback about this site to:</p>
<ul class="contact">
<li class="fa-envelope-o"><a href="https://documentation.help/cdn-cgi/l/email-protection#761e131a06121915053604131e1b171818581519"><span class="__cf_email__" data-cfemail="c3aba6afb3a7aca0b083b1a6abaea2adadeda0ac">[email&#160;protected]</span></a></li>
</ul>
</section>

<footer id="footer">
<p class="copyright">&copy; <a href="https://documentation.help">documentation.help</a>. Design: <a href="https://rehmann.co">rehmann.co</a>.</p>
<ul class="icons">

</ul>
</footer>
</div>
</div>
</div>

<script data-cfasync="false" src="../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="../assets/js/jquery.min.js" type="3690fc05c07683361bb8285e-text/javascript"></script>
<script src="../assets/js/skel.min.js" type="3690fc05c07683361bb8285e-text/javascript"></script>
<script src="../assets/js/util.js" type="3690fc05c07683361bb8285e-text/javascript"></script>
<!--[if lte IE 8]><script src="assets/js/ie/respond.min.js"></script><![endif]-->
<script src="../assets/js/main.js" type="3690fc05c07683361bb8285e-text/javascript"></script>
<script src="https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js" data-cf-settings="3690fc05c07683361bb8285e-|49" defer=""></script></body>
</html>
